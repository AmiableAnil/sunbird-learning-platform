# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=__env__.auto-reviewer

# YARN
yarn.package.path=http://__yarn_host__:__yarn_port__/__env__/${project.artifactId}-${pom.version}-distribution.tar.gz

# Metrics
metrics.reporters=snapshot,jmx
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.__env__.metrics
metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory

# Task
task.class=org.ekstep.jobs.samza.task.AutoReviewerTask
task.inputs=kafka.__env__.content.curate.request
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
task.checkpoint.replication.factor=1
task.commit.ms=60000
task.window.ms=300000
task.opts=-Dfile.encoding=UTF8
#task.broadcast.inputs=kafka.__env__.system.command#0

# Serializers
serializers.registry.json.class=org.ekstep.jobs.samza.serializers.EkstepJsonSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=json
systems.kafka.streams.metrics.samza.msg.serde=metrics
systems.kafka.consumer.zookeeper.connect=__zookeepers__
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.samza.offset.default=oldest
systems.kafka.producer.bootstrap.servers=__kafka_brokers__

# Job Coordinator
job.coordinator.system=kafka
# Normally, this would be 3, but we have only one broker.
job.coordinator.replication.factor=1

# Job specific config properties
telemetry_raw_topic=__env__.telemetry.raw
platform-api-url=__lp_url__
ekstepPlatformApiUserId=ilimi

# neo4j configurations
redis.host=__redis_host__
redis.port=__redis_port__
redis.maxConnections=128
akka.request_timeout=30
environment.id=__environment_id__
graph.passport.key.base=__graph_passport_key__
route.domain=__lp_bolt_url__
route.bolt.read.domain=__lp_bolt_read_url__
route.bolt.write.domain=__lp_bolt_write_url__
route.all=__other_bolt_url__
route.bolt.read.all=__other_bolt_read_url__
route.bolt.write.all=__other_bolt_write_url__
shard.id=__mw_shard_id__
graph.dir="/data/graphDB"
graph.ids=["domain","language","en","hi","ka","te","ta"]
platform.auth.check.enabled=false
platform.cache.ttl=3600000

# Metrics
output.metrics.job.name=auto-reviewer
output.metrics.topic.name=__env__.pipeline_metrics

telemetry_env=__env_name__
installation.id=__installation_id__
# Configuration for default channel ID
channel.default=devcon

#kafka.topic.system.command=__env__.system.command


curate.dummy.response=false
ds.api.url=http://50.1.0.13:5000/ML/AutoReview
pdf.size.allowed=10


cassandra.lp.connection=__cassandra_lp_connection__
cassandra.lpa.connection=__cassandra_lpa_connection__
language.api.key=replace_it
# Cloud store details
cloud_storage_type=__cloud_storage_type__
azure_storage_key=__azure_storage_key__
azure_storage_secret=__azure_storage_secret__
azure_storage_container=__azure_storage_container__
aws_storage_key=__aws_access_key_id__
aws_storage_secret=__aws_secret_access_key__
aws_storage_container=__aws_storage_container__

lp.tempfile.location=__lp_tmpfile_location__
max.iteration.count.samza.job=__max_iteration_count_for_samza_job__


content.keyspace.name=__keyspace_name__
content.keyspace.table=devcon_content_data
assessment.keyspace.name=__keyspace_name__
hierarchy.keyspace.name=__hierarchy_keyspace_name__
content.hierarchy.table=content_hierarchy
CONTENT_TO_VEC_URL=__content_to_vec_url__


keyword.api.key=7f6ddf5416da2b022145472610f03f08
