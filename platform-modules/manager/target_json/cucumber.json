[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 13134881,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 29999639,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12598009,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 16469179,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13394513,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 19806093,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11145702,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 17973447,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9157684,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11020117,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13538837,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12399890,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9809569,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9331713,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11916530,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8147017,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8195275,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12167018,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9343647,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8448869,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9285738,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10537293,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8767303,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8856228,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10369806,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10049007,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10881523,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12638529,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8490674,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Create a Question.",
        "description": "",
        "id": "test-all-scenarios-of-create-question.;create-a-question.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 194920323,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.assementItem.CreateAssessmentItemTest.createQuestion(CreateAssessmentItemTest.java:48)\n\tat com.ilimi.assessment.controller.assementItem.CreateAssessmentItemTest.create(CreateAssessmentItemTest.java:85)\n\tat âœ½.When create question data for Assessment-items(com/ilimi/taxonomy/controller/assessmentItem/cucumber/CreateAssessmentItemTest.feature:4)\n",
              "status": "failed"
            },
            "line": 4,
            "name": "create question data for Assessment-items",
            "match": {
              "location": "CreateAssessmentItemTest.create()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "Creating a Question Taxonomy id is numeracy with proper question data for mcq",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "proper question data for mcq",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "return status of create Question is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                },
                {
                  "val": "200",
                  "offset": 68
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "Creating a Question Taxonomy id is numeracy with proper question data for mmcq",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "proper question data for mmcq",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "return status of create Question is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                },
                {
                  "val": "200",
                  "offset": 68
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "Creating a Question Taxonomy id is numeracy with proper question data for ftb",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "proper question data for ftb",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "return status of create Question is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                },
                {
                  "val": "200",
                  "offset": 68
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "Creating a Question Taxonomy id is numeracy with proper question data for canvas_question",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "proper question data for canvas_question",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "return status of create Question is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                },
                {
                  "val": "200",
                  "offset": 68
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "Creating a Question Taxonomy id is numeracy with proper question data for speech_question",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "proper question data for speech_question",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "return status of create Question is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                },
                {
                  "val": "200",
                  "offset": 68
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "Creating a Question Taxonomy id is numeracy with proper question data for mtf",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "proper question data for mtf",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "return status of create Question is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                },
                {
                  "val": "200",
                  "offset": 68
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13763731,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4058001,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14212371,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4237225,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8372514,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4082040,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 21274616,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13099295,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 24704334,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4052331,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3984332,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4156207,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5151610,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4042849,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14259702,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4178884,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 16119206,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4075106,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 17394367,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4481718,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11811924,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3946222,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 42253995,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4225777,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 15515355,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4128121,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14267669,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5372876,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14338668,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 24,
        "name": "Create a Question with invalid options.",
        "description": "",
        "id": "test-all-scenarios-of-create-question.;create-a-question-with-invalid-options.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 36658507,
              "status": "passed"
            },
            "line": 25,
            "name": "Creating a Question Taxonomy id is numeracy with invalid question options for mcq",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "invalid question options for mcq",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9384906,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]assessment_item.crea...\u003e but was:\u003cekstep.[]assessment_item.crea...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.assessment.controller.assementItem.CreateAssessmentItemTest.basicAssertion(CreateAssessmentItemTest.java:34)\n\tat com.ilimi.assessment.controller.assementItem.CreateAssessmentItemTest.assertResultAction(CreateAssessmentItemTest.java:163)\n\tat âœ½.Then return status of create Question is failed and response code is 400(com/ilimi/taxonomy/controller/assessmentItem/cucumber/CreateAssessmentItemTest.feature:26)\n",
              "status": "failed"
            },
            "line": 26,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "return error message as no option found with answer.",
            "match": {
              "arguments": [
                {
                  "val": "no option found with answer.",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "Creating a Question Taxonomy id is numeracy with invalid question options for ftb",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "invalid question options for ftb",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "return error message as answer is missing.",
            "match": {
              "arguments": [
                {
                  "val": "answer is missing.",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "Creating a Question Taxonomy id is numeracy with invalid question options for mtf",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "invalid question options for mtf",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "return error message as invalid assessment item property: lhs_options. index is missing.",
            "match": {
              "arguments": [
                {
                  "val": "invalid assessment item property: lhs_options. index is missing.",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "Creating a Question Taxonomy id is numeracy with multiple answer for mcq",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "multiple answer for mcq",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "return error message as no option found with answer.",
            "match": {
              "arguments": [
                {
                  "val": "no option found with answer.",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "Creating a Question Taxonomy id is numeracy with no options for mcq",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "no options for mcq",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "return error message as no option found with answer.",
            "match": {
              "arguments": [
                {
                  "val": "no option found with answer.",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "Creating a Question Taxonomy id is numeracy with no multiple answer for mmcq",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "no multiple answer for mmcq",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "return error message as there are no multiple answer options.",
            "match": {
              "arguments": [
                {
                  "val": "there are no multiple answer options.",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "Creating a Question Taxonomy id is numeracy with wrong answer for ftb",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "wrong answer for ftb",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "return error message as Metadata answer should be a valid JSON.",
            "match": {
              "arguments": [
                {
                  "val": "Metadata answer should be a valid JSON.",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4225111,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 90413203,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4051709,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3904066,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6174387,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4145429,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6788923,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4311346,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13686582,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4056030,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 63793239,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4202825,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4200166,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3941321,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4221211,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6327439,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7870121,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4096961,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4233175,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4335394,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4030189,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3866710,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4200731,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3949920,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 24477782,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3966981,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 43779568,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8117967,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4016131,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 53,
        "name": "Create a Question with invalid no of answers.",
        "description": "",
        "id": "test-all-scenarios-of-create-question.;create-a-question-with-invalid-no-of-answers.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 25275020,
              "status": "passed"
            },
            "comments": [
              {
                "line": 55,
                "value": "#    When Creating a Question Taxonomy id is numeracy with invalid no. of answer for mmcq"
              },
              {
                "line": 56,
                "value": "#    Then return status of create Question is failed and response code is 400"
              },
              {
                "line": 57,
                "value": "#    And return error message as invalid assessment item property: options. is_answer is missing."
              }
            ],
            "line": 59,
            "name": "Creating a Question Taxonomy id is numeracy with invalid no. of answer for ftb",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "invalid no. of answer for ftb",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2740345,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]assessment_item.crea...\u003e but was:\u003cekstep.[]assessment_item.crea...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.assessment.controller.assementItem.CreateAssessmentItemTest.basicAssertion(CreateAssessmentItemTest.java:34)\n\tat com.ilimi.assessment.controller.assementItem.CreateAssessmentItemTest.assertResultAction(CreateAssessmentItemTest.java:163)\n\tat âœ½.Then return status of create Question is failed and response code is 400(com/ilimi/taxonomy/controller/assessmentItem/cucumber/CreateAssessmentItemTest.feature:60)\n",
              "status": "failed"
            },
            "line": 60,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "return error message as invalid assessment item property: options. is_answer is missing.",
            "match": {
              "arguments": [
                {
                  "val": "invalid assessment item property: options. is_answer is missing.",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "Creating a Question Taxonomy id is numeracy with invalid no. of answer for canvas",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "invalid no. of answer for canvas",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "return error message as invalid assessment item property: options. is_answer is missing.",
            "match": {
              "arguments": [
                {
                  "val": "invalid assessment item property: options. is_answer is missing.",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "Creating a Question Taxonomy id is numeracy with invalid no. of answer for speech",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "invalid no. of answer for speech",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "return error message as invalid assessment item property: options. is_answer is missing.",
            "match": {
              "arguments": [
                {
                  "val": "invalid assessment item property: options. is_answer is missing.",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 91914303,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4441390,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 16648400,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4386702,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5601380,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4179388,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14586517,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4170035,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 136307515,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4317602,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4345937,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4243180,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14818542,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4291984,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4138027,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 47003837,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5261139,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9112006,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4479002,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5398898,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 115952324,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4389682,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4388992,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4583921,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4649175,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4357136,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4274047,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4169511,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4244638,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 71,
        "name": "Create a Question when Content data is not in correct format or missing.",
        "description": "",
        "id": "test-all-scenarios-of-create-question.;create-a-question-when-content-data-is-not-in-correct-format-or-missing.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4230034,
              "status": "passed"
            },
            "line": 72,
            "name": "Creating a Question Taxonomy id is numeracy with question as blank",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "question as blank",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3032447,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]assessment_item.crea...\u003e but was:\u003cekstep.[]assessment_item.crea...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.assessment.controller.assementItem.CreateAssessmentItemTest.basicAssertion(CreateAssessmentItemTest.java:34)\n\tat com.ilimi.assessment.controller.assementItem.CreateAssessmentItemTest.assertResultAction(CreateAssessmentItemTest.java:163)\n\tat âœ½.Then return status of create Question is failed and response code is 400(com/ilimi/taxonomy/controller/assessmentItem/cucumber/CreateAssessmentItemTest.feature:73)\n",
              "status": "failed"
            },
            "line": 73,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "return error message as assessmentitem Object is blank",
            "match": {
              "arguments": [
                {
                  "val": "assessmentitem Object is blank",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "Creating a Question Taxonomy id is numeracy with empty object type",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "empty object type",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "return error message as Object type not set for node: tQ2",
            "match": {
              "arguments": [
                {
                  "val": "Object type not set for node: tQ2",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "Creating a Question Taxonomy id is numeracy with wrong definition node",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "wrong definition node",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "return error message as Definition node not found for Object Type: ilimi",
            "match": {
              "arguments": [
                {
                  "val": "Definition node not found for Object Type: ilimi",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 84,
            "name": "Creating a Question Taxonomy id is numeracy with require metadata",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "require metadata",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "return error message as Required Metadata code not set",
            "match": {
              "arguments": [
                {
                  "val": "Required Metadata code not set",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 88,
            "name": "Creating a Question Taxonomy id is numeracy with invalid data type for select",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "invalid data type for select",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 89,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 90,
            "name": "return error message as Metadata status should be one of: [Draft, Review, Live, Retired, Mock]",
            "match": {
              "arguments": [
                {
                  "val": "Metadata status should be one of: [Draft, Review, Live, Retired, Mock]",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "Creating a Question Taxonomy id is numeracy with unsupported relation",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "unsupported relation",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 93,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 94,
            "name": "return error message as relation ilimi is not supported",
            "match": {
              "arguments": [
                {
                  "val": "relation ilimi is not supported",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 96,
            "name": "Creating a Question Taxonomy id is numeracy with invalid data type",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "invalid data type",
                  "offset": 49
                }
              ],
              "location": "CreateAssessmentItemTest.createquestion(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "return status of create Question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "CreateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "return error message as invalid data type",
            "match": {
              "arguments": [
                {
                  "val": "invalid data type",
                  "offset": 24
                }
              ],
              "location": "CreateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Test all scenarios of create Question.",
    "description": "",
    "id": "test-all-scenarios-of-create-question.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/assessmentItem/cucumber/CreateAssessmentItemTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 5187866,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 41048517,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9980552,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5854310,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8227851,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6878696,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4522065,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6049059,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6780060,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6185811,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4719729,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4480434,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4415674,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4492235,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4453926,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7171568,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5763378,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4470621,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5554573,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4533517,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6321935,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4430444,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7171477,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4257438,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4335703,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4083822,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4240638,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4255720,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4382220,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Delete a question using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-question.;delete-a-question-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 23876648,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.assementItem.DeleteAssessmentItemTest.createQuestion(DeleteAssessmentItemTest.java:45)\n\tat com.ilimi.assessment.controller.assementItem.DeleteAssessmentItemTest.getInputData(DeleteAssessmentItemTest.java:85)\n\tat âœ½.When Deleting a Question Taxonomy id is numeracy and question id is tempQ(com/ilimi/taxonomy/controller/assessmentItem/cucumber/DeleteAssessmentItemTest.feature:4)\n",
              "status": "failed"
            },
            "line": 4,
            "name": "Deleting a Question Taxonomy id is numeracy and question id is tempQ",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "tempQ",
                  "offset": 63
                }
              ],
              "location": "DeleteAssessmentItemTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 5,
            "name": "return status of delete question is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                },
                {
                  "val": "200",
                  "offset": 68
                }
              ],
              "location": "DeleteAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5249217,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4953535,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6602949,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4822603,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4682667,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4070808,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4959909,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5323297,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5078118,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5133950,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4612071,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4405574,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4523131,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4352567,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5177416,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4805181,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6453754,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6671292,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5293991,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4602436,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 21090235,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12213655,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4447308,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5887832,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4410840,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4318160,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11929134,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4306521,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4376716,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Delete a question using wrong identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-question.;delete-a-question-using-wrong-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19229228,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.assementItem.DeleteAssessmentItemTest.createQuestion(DeleteAssessmentItemTest.java:45)\n\tat com.ilimi.assessment.controller.assementItem.DeleteAssessmentItemTest.getInputData(DeleteAssessmentItemTest.java:83)\n\tat âœ½.When Deleting a Question Taxonomy id is numeracy and question id is ilimi(com/ilimi/taxonomy/controller/assessmentItem/cucumber/DeleteAssessmentItemTest.feature:8)\n",
              "status": "failed"
            },
            "line": 8,
            "name": "Deleting a Question Taxonomy id is numeracy and question id is ilimi",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "ilimi",
                  "offset": 63
                }
              ],
              "location": "DeleteAssessmentItemTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "return status of delete question is failed and response code is 404",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "404",
                  "offset": 64
                }
              ],
              "location": "DeleteAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "return error message by delete question API is Node not found: ilimi",
            "match": {
              "arguments": [
                {
                  "val": "Node not found: ilimi",
                  "offset": 47
                }
              ],
              "location": "DeleteAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of delete question.",
    "description": "",
    "id": "test-all-scenarios-of-delete-question.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/assessmentItem/cucumber/DeleteAssessmentItemTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 4205274,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4981309,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5480029,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3809013,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9004368,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4665738,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4805106,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4072428,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4082387,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3921334,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3775187,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3820378,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3810516,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4089168,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3682051,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4350205,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4460337,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3961583,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3794123,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3967290,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3848863,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3792556,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3696153,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3849688,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3841589,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4281877,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3613222,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3774727,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4051514,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get a question using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-question.;get-a-question-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19684136,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.assementItem.GetAssessmentItemTest.createQuestion(GetAssessmentItemTest.java:51)\n\tat com.ilimi.assessment.controller.assementItem.GetAssessmentItemTest.getInput(GetAssessmentItemTest.java:67)\n\tat âœ½.When Getting a question Taxonomy id is numeracy and question id is Q1(com/ilimi/taxonomy/controller/assessmentItem/cucumber/GetAssessmentItemTest.feature:4)\n",
              "status": "failed"
            },
            "line": 4,
            "name": "Getting a question Taxonomy id is numeracy and question id is Q1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 34
                },
                {
                  "val": "Q1",
                  "offset": 62
                }
              ],
              "location": "GetAssessmentItemTest.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 5,
            "name": "return status of get question is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 33
                },
                {
                  "val": "200",
                  "offset": 65
                }
              ],
              "location": "GetAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3996227,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3752209,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3662489,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3735856,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3592342,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3565533,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3585765,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4022038,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4237127,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4034710,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5206173,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4263100,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4090049,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4207873,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4120527,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4191955,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3810847,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3677759,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3633932,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4849735,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3636987,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3816166,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3842373,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4118082,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4040496,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5104075,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4048015,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4361661,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3850792,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Get a question using wrong identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-question.;get-a-question-using-wrong-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20088243,
              "status": "passed"
            },
            "line": 8,
            "name": "Getting a question Taxonomy id is numeracy and question id is ilimi",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 34
                },
                {
                  "val": "ilimi",
                  "offset": 62
                }
              ],
              "location": "GetAssessmentItemTest.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 455111,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\n\tat org.junit.Assert.assertEquals(Assert.java:118)\n\tat org.junit.Assert.assertEquals(Assert.java:555)\n\tat org.junit.Assert.assertEquals(Assert.java:542)\n\tat com.ilimi.taxonomy.base.test.BaseCucumberTest.assertStatus(BaseCucumberTest.java:136)\n\tat com.ilimi.assessment.controller.assementItem.GetAssessmentItemTest.assertResultAction(GetAssessmentItemTest.java:88)\n\tat âœ½.Then return status of get question is failed and response code is 404(com/ilimi/taxonomy/controller/assessmentItem/cucumber/GetAssessmentItemTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "return status of get question is failed and response code is 404",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 33
                },
                {
                  "val": "404",
                  "offset": 61
                }
              ],
              "location": "GetAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "return error message by get question API is Node not found: ilimi",
            "match": {
              "arguments": [
                {
                  "val": "Node not found: ilimi",
                  "offset": 44
                }
              ],
              "location": "GetAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get question.",
    "description": "",
    "id": "test-all-scenarios-of-get-question.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/assessmentItem/cucumber/GetAssessmentItemTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 6129801,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4445605,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7452174,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3853131,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4699343,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3571662,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6921447,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3569318,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5986645,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5475091,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3744622,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6892573,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3722778,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5352407,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3655698,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5590701,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3842451,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3717963,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3626680,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4389893,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3582898,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6468189,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4366448,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8965663,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5192048,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5898586,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4631162,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3437018,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3491672,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Update a question.",
        "description": "",
        "id": "test-all-scenarios-of-update-question.;update-a-question.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19145419,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.assementItem.UpdateAssessmentItemTest.createQuestion(UpdateAssessmentItemTest.java:42)\n\tat com.ilimi.assessment.controller.assementItem.UpdateAssessmentItemTest.getInputData(UpdateAssessmentItemTest.java:70)\n\tat âœ½.When Updating a question Taxonomy id is numeracy and question id is temp with proper question data and metadata changes(com/ilimi/taxonomy/controller/assessmentItem/cucumber/UpdateAssessmentItemTest.feature:4)\n",
              "status": "failed"
            },
            "line": 4,
            "name": "Updating a question Taxonomy id is numeracy and question id is temp with proper question data and metadata changes",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "temp",
                  "offset": 63
                },
                {
                  "val": "proper question data and metadata changes",
                  "offset": 73
                }
              ],
              "location": "UpdateAssessmentItemTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 5,
            "name": "return status of update question is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                },
                {
                  "val": "200",
                  "offset": 68
                }
              ],
              "location": "UpdateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "Updating a question Taxonomy id is numeracy and question id is temp with proper question data and relation changes",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "temp",
                  "offset": 63
                },
                {
                  "val": "proper question data and relation changes",
                  "offset": 73
                }
              ],
              "location": "UpdateAssessmentItemTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "return status of update question is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                },
                {
                  "val": "200",
                  "offset": 68
                }
              ],
              "location": "UpdateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3756755,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4633893,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3639386,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4545093,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3690081,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3541998,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3519313,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5678732,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3668500,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5131980,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3857572,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 62265805,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3456866,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3404766,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4920127,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3394418,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3420237,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3359017,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3298856,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3424015,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3341972,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4648140,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3429454,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3280708,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3538015,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5678013,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3640957,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3385495,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3453092,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Update a question using wrong identifier.",
        "description": "",
        "id": "test-all-scenarios-of-update-question.;update-a-question-using-wrong-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21089124,
              "status": "passed"
            },
            "line": 12,
            "name": "Updating a question Taxonomy id is numeracy and question id is ilimi with wrong question id",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "ilimi",
                  "offset": 63
                },
                {
                  "val": "wrong question id",
                  "offset": 74
                }
              ],
              "location": "UpdateAssessmentItemTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 426513,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c400\u003e\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\n\tat org.junit.Assert.assertEquals(Assert.java:118)\n\tat org.junit.Assert.assertEquals(Assert.java:555)\n\tat org.junit.Assert.assertEquals(Assert.java:542)\n\tat com.ilimi.taxonomy.base.test.BaseCucumberTest.assertStatus(BaseCucumberTest.java:136)\n\tat com.ilimi.assessment.controller.assementItem.UpdateAssessmentItemTest.assertResultAction(UpdateAssessmentItemTest.java:100)\n\tat âœ½.Then return status of update question is failed and response code is 404(com/ilimi/taxonomy/controller/assessmentItem/cucumber/UpdateAssessmentItemTest.feature:13)\n",
              "status": "failed"
            },
            "line": 13,
            "name": "return status of update question is failed and response code is 404",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "404",
                  "offset": 64
                }
              ],
              "location": "UpdateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "return error message by update question API is Node not found",
            "match": {
              "arguments": [
                {
                  "val": "Node not found",
                  "offset": 47
                }
              ],
              "location": "UpdateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3526369,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9367344,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3541165,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5125238,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3476698,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 16628323,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3350922,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3426045,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3474920,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3346583,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3345573,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3503444,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5116469,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3572200,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3529442,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3804094,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3514997,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5845470,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3546468,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3660519,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3524018,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3581350,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3619862,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3456595,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3770131,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3504389,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4428714,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3508555,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3377004,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 16,
        "name": "Update a question when Content data is not in correct format or missing.",
        "description": "",
        "id": "test-all-scenarios-of-update-question.;update-a-question-when-content-data-is-not-in-correct-format-or-missing.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16643002,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.assementItem.UpdateAssessmentItemTest.createQuestion(UpdateAssessmentItemTest.java:42)\n\tat com.ilimi.assessment.controller.assementItem.UpdateAssessmentItemTest.getInputData(UpdateAssessmentItemTest.java:70)\n\tat âœ½.When Updating a question Taxonomy id is numeracy and question id is temp with question as blank(com/ilimi/taxonomy/controller/assessmentItem/cucumber/UpdateAssessmentItemTest.feature:17)\n",
              "status": "failed"
            },
            "line": 17,
            "name": "Updating a question Taxonomy id is numeracy and question id is temp with question as blank",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "temp",
                  "offset": 63
                },
                {
                  "val": "question as blank",
                  "offset": 73
                }
              ],
              "location": "UpdateAssessmentItemTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "return status of update question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "UpdateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "return error message by update question API is question Object is blank",
            "match": {
              "arguments": [
                {
                  "val": "question Object is blank",
                  "offset": 47
                }
              ],
              "location": "UpdateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "Updating a question Taxonomy id is numeracy and question id is temp with require metadata",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "temp",
                  "offset": 63
                },
                {
                  "val": "require metadata",
                  "offset": 73
                }
              ],
              "location": "UpdateAssessmentItemTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "return status of update question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "UpdateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "return error message by update question API is Required Metadata code not set",
            "match": {
              "arguments": [
                {
                  "val": "Required Metadata code not set",
                  "offset": 47
                }
              ],
              "location": "UpdateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "Updating a question Taxonomy id is numeracy and question id is temp with invalid data type for select",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "temp",
                  "offset": 63
                },
                {
                  "val": "invalid data type for select",
                  "offset": 73
                }
              ],
              "location": "UpdateAssessmentItemTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "return status of update question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "UpdateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "return error message by update question API is Metadata status should be one of: [Draft, Review, Live, Retired, Mock]",
            "match": {
              "arguments": [
                {
                  "val": "Metadata status should be one of: [Draft, Review, Live, Retired, Mock]",
                  "offset": 47
                }
              ],
              "location": "UpdateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "Updating a question Taxonomy id is numeracy and question id is temp with object type not set",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "temp",
                  "offset": 63
                },
                {
                  "val": "object type not set",
                  "offset": 73
                }
              ],
              "location": "UpdateAssessmentItemTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "return status of update question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "UpdateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "return error message by update question API is Object type not set for node: tempQ",
            "match": {
              "arguments": [
                {
                  "val": "Object type not set for node: tempQ",
                  "offset": 47
                }
              ],
              "location": "UpdateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "Updating a question Taxonomy id is numeracy and question id is temp with wrong definition node",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 35
                },
                {
                  "val": "temp",
                  "offset": 63
                },
                {
                  "val": "wrong definition node",
                  "offset": 73
                }
              ],
              "location": "UpdateAssessmentItemTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "return status of update question is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "UpdateAssessmentItemTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "return error message by update question API is Definition node not found for Object Type: ilimi",
            "match": {
              "arguments": [
                {
                  "val": "Definition node not found for Object Type: ilimi",
                  "offset": 47
                }
              ],
              "location": "UpdateAssessmentItemTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Test all scenarios of update question.",
    "description": "",
    "id": "test-all-scenarios-of-update-question.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/assessmentItem/cucumber/UpdateAssessmentItemTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3868273,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3333697,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4623425,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3581565,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3408322,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5216664,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4988986,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3994724,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4017917,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3409460,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13896280,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6769815,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3599424,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3971479,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3988400,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6664195,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4105195,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4500368,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3659513,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5159512,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3722612,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6794484,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3585060,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3543674,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3610795,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3615512,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3862989,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3531333,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3925191,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Create a concept.",
        "description": "",
        "id": "test-all-scenarios-of-create-concept.;create-a-concept.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 219772,
              "status": "passed"
            },
            "line": 4,
            "name": "I give Taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateConceptTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40283138,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.createConcept(CreateConceptTest.java:83)\n\tat âœ½.Then Create a Concept and get the status successful(com/ilimi/taxonomy/controller/concept/cucumber/CreateConceptTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Create a Concept and get the status successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                }
              ],
              "location": "CreateConceptTest.createConcept(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3617810,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3864096,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3480782,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3527265,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5301336,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3731510,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3551384,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3511742,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5158578,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4240062,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3761091,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5245458,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3981638,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3543531,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3740444,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3513783,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3396377,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3443531,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3705232,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3674735,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3594708,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3437048,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3822849,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3730802,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3627683,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6880723,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10101962,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4451757,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7353162,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Create a concept when taxonomy id is empty.",
        "description": "",
        "id": "test-all-scenarios-of-create-concept.;create-a-concept-when-taxonomy-id-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 188133,
              "status": "passed"
            },
            "line": 8,
            "name": "I give Taxonomy ID empty",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 19
                }
              ],
              "location": "CreateConceptTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18651076,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.create\u003e but was:\u003cekstep.[]concept.create\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.basicAssertion(CreateConceptTest.java:31)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.getConceptWithoutTaxonomy(CreateConceptTest.java:116)\n\tat âœ½.Then I should get Error Message Taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/concept/cucumber/CreateConceptTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I should get Error Message Taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 42
                },
                {
                  "val": "400",
                  "offset": 62
                }
              ],
              "location": "CreateConceptTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3587140,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10038456,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5187192,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14065647,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6238310,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9946857,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3834391,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3486873,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3873687,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3418843,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3189700,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3246203,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3199761,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3169422,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5209782,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5381205,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3495450,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3169845,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3414202,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3777259,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3570524,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5339423,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3406932,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3309061,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3202895,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3195964,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3430604,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3515776,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3318873,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Create a concept when taxonomy id is absent.",
        "description": "",
        "id": "test-all-scenarios-of-create-concept.;create-a-concept-when-taxonomy-id-is-absent.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 194401,
              "status": "passed"
            },
            "line": 12,
            "name": "I give Taxonomy ID absent",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 19
                }
              ],
              "location": "CreateConceptTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5948980,
              "status": "passed"
            },
            "line": 13,
            "name": "I should get Error Message Taxonomy Id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 42
                },
                {
                  "val": "400",
                  "offset": 65
                }
              ],
              "location": "CreateConceptTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4106747,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3698278,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3839660,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3607018,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3492983,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12568424,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13681286,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3508167,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3300280,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9040326,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3881179,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3557713,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3393439,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3327579,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3460746,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3834636,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3508344,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3624892,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3394147,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3466713,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3232356,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3198265,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3359379,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3337972,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3610491,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3435052,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3429266,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3386493,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3274666,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 15,
        "name": "Create a concept when concept object is blank.",
        "description": "",
        "id": "test-all-scenarios-of-create-concept.;create-a-concept-when-concept-object-is-blank.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1610554,
              "status": "passed"
            },
            "line": 16,
            "name": "I give Taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateConceptTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7250412,
              "status": "passed"
            },
            "line": 17,
            "name": "I should get errMsg is Validation Error",
            "match": {
              "arguments": [
                {
                  "val": "Error",
                  "offset": 34
                }
              ],
              "location": "CreateConceptTest.conceptObjectBlank(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4620137,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4544053,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 17769176,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4195473,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14680795,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7096976,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4050949,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4082338,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4119740,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4039351,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4081445,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6033708,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4013683,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5505218,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4213162,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4413598,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4046534,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4015295,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4270539,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4611032,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4235274,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8230325,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4562296,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5203163,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4354262,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4399450,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4211523,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5278742,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4219422,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 19,
        "name": "Create a concept when object type is empty.",
        "description": "",
        "id": "test-all-scenarios-of-create-concept.;create-a-concept-when-object-type-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 176528,
              "status": "passed"
            },
            "line": 20,
            "name": "I give Taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateConceptTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8890619,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.create\u003e but was:\u003cekstep.[]concept.create\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.basicAssertion(CreateConceptTest.java:31)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.i_should_get_errMsg_is_Concept_Object_is_blank(CreateConceptTest.java:161)\n\tat âœ½.Then I should get errMsg is Concept Object is blank(com/ilimi/taxonomy/controller/concept/cucumber/CreateConceptTest.feature:21)\n",
              "status": "failed"
            },
            "line": 21,
            "name": "I should get errMsg is Concept Object is blank",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 41
                }
              ],
              "location": "CreateConceptTest.i_should_get_errMsg_is_Concept_Object_is_blank(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4177463,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3355755,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 40559583,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3569620,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3295010,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3424821,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 17189479,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3843352,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3599129,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3287093,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3267836,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3330005,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3382537,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3312357,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5480184,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3823776,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3431718,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7804396,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3465910,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3563130,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3480073,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3322151,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3545674,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3402175,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3530083,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3977660,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3501048,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3528685,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3424176,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 23,
        "name": "Create a concept when defination node found.",
        "description": "",
        "id": "test-all-scenarios-of-create-concept.;create-a-concept-when-defination-node-found.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 176301,
              "status": "passed"
            },
            "line": 24,
            "name": "I give Taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateConceptTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 30301415,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[com.ilimi.common.exception.ResourceNotFoundException: Node not found: tempNode]\u003e but was:\u003c[Definition node not found for Object Type: Concept]\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.nodeNotFound(CreateConceptTest.java:185)\n\tat âœ½.Then I should get errMsg is node not found(com/ilimi/taxonomy/controller/concept/cucumber/CreateConceptTest.feature:25)\n",
              "status": "failed"
            },
            "line": 25,
            "name": "I should get errMsg is node not found",
            "match": {
              "arguments": [
                {
                  "val": "not",
                  "offset": 28
                }
              ],
              "location": "CreateConceptTest.nodeNotFound(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3398841,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3231328,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 17411221,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3460350,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5967592,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7589142,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3314896,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4582810,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3353834,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3355160,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3439233,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3322595,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3295956,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3296175,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3077691,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3329413,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3442047,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3309426,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3390362,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3434137,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3298374,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3630195,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3185936,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3110851,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3106267,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3102635,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3159173,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3332472,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3220170,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 27,
        "name": "Create a concept when metadata is missing.",
        "description": "",
        "id": "test-all-scenarios-of-create-concept.;create-a-concept-when-metadata-is-missing.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 173725,
              "status": "passed"
            },
            "line": 28,
            "name": "I give Taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateConceptTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 24229808,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[Required Metadata name not se]t\u003e but was:\u003c[Definition node not found for Object Type: Concep]t\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.i_should_get_errMsg_is_metadata_name_is_not_set(CreateConceptTest.java:213)\n\tat âœ½.Then I should get errMsg is metadata name is not set(com/ilimi/taxonomy/controller/concept/cucumber/CreateConceptTest.feature:29)\n",
              "status": "failed"
            },
            "line": 29,
            "name": "I should get errMsg is metadata name is not set",
            "match": {
              "arguments": [
                {
                  "val": "name",
                  "offset": 32
                }
              ],
              "location": "CreateConceptTest.i_should_get_errMsg_is_metadata_name_is_not_set(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3345408,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6979580,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4060460,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3965564,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3181800,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6221447,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3153703,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3393567,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5980490,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3147379,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3150916,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3210571,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3416338,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3369233,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3321036,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3124473,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3073277,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3199403,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3115617,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3161734,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3148739,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3375057,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3365801,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3387687,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3400374,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3181676,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3169863,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3210911,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3229647,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 31,
        "name": "Create a concept when datatype is invalid.",
        "description": "",
        "id": "test-all-scenarios-of-create-concept.;create-a-concept-when-datatype-is-invalid.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 180088,
              "status": "passed"
            },
            "line": 32,
            "name": "I give Taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateConceptTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 31153906,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.create\u003e but was:\u003cekstep.[]concept.create\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.basicAssertion(CreateConceptTest.java:31)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.invalidDataType(CreateConceptTest.java:233)\n\tat âœ½.Then I should get errMsg is datatype is invalid(com/ilimi/taxonomy/controller/concept/cucumber/CreateConceptTest.feature:33)\n",
              "status": "failed"
            },
            "line": 33,
            "name": "I should get errMsg is datatype is invalid",
            "match": {
              "location": "CreateConceptTest.invalidDataType()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14804910,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3220019,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3198333,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3332164,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3094115,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3196996,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4048602,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3172082,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3192137,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2943176,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2778386,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2760075,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3316229,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3164937,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3111698,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2972938,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3074870,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3078768,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3028609,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3065257,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3283589,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3305844,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3437910,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3268875,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3023289,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2965062,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3052532,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3054201,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3292276,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 35,
        "name": "Create a concept with unsupported relation.",
        "description": "",
        "id": "test-all-scenarios-of-create-concept.;create-a-concept-with-unsupported-relation.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 188849,
              "status": "passed"
            },
            "line": 36,
            "name": "I give Taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateConceptTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 58514855,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.create\u003e but was:\u003cekstep.[]concept.create\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.basicAssertion(CreateConceptTest.java:31)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.i_should_get_errMsg_is_Relation_is_not_supported(CreateConceptTest.java:260)\n\tat âœ½.Then I should get errMsg is Relation is not supported(com/ilimi/taxonomy/controller/concept/cucumber/CreateConceptTest.feature:37)\n",
              "status": "failed"
            },
            "line": 37,
            "name": "I should get errMsg is Relation is not supported",
            "match": {
              "arguments": [
                {
                  "val": "not",
                  "offset": 35
                }
              ],
              "location": "CreateConceptTest.i_should_get_errMsg_is_Relation_is_not_supported(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 6117672,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3193531,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3211664,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3047134,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2954451,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3045164,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3046543,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3100292,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3231071,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3390734,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3249793,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3276680,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3087267,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2982917,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3042772,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3060541,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3195987,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3356542,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3338646,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3331037,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3132752,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4877561,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3131595,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3054815,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3062594,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3193225,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3322181,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3477652,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3233919,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 39,
        "name": "Create a concept when incoming and outgoing relation missing.",
        "description": "",
        "id": "test-all-scenarios-of-create-concept.;create-a-concept-when-incoming-and-outgoing-relation-missing.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 171894,
              "status": "passed"
            },
            "line": 40,
            "name": "I give Taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateConceptTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 51397316,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.create\u003e but was:\u003cekstep.[]concept.create\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.basicAssertion(CreateConceptTest.java:31)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.CreateConceptTest.required_incoming_relations_are_missing(CreateConceptTest.java:287)\n\tat âœ½.Then Required incoming relations are missing(com/ilimi/taxonomy/controller/concept/cucumber/CreateConceptTest.feature:41)\n",
              "status": "failed"
            },
            "line": 41,
            "name": "Required incoming relations are missing",
            "match": {
              "arguments": [
                {
                  "val": "missing",
                  "offset": 32
                }
              ],
              "location": "CreateConceptTest.required_incoming_relations_are_missing(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of create concept.",
    "description": "",
    "id": "test-all-scenarios-of-create-concept.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/concept/cucumber/CreateConceptTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3403956,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3234164,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3250968,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3356091,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3211954,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3271505,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3200496,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3170655,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3104436,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7150530,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3926936,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3259451,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3133211,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3120645,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3300152,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3136699,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3205570,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3597653,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3212252,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3362946,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3361304,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3044189,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3099196,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3390294,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3342450,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3267188,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3084426,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3137366,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3358396,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Delete a concept using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-concept.;delete-a-concept-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 260424,
              "status": "passed"
            },
            "line": 4,
            "name": "I give Concept id Num:C1 Relation isParentOf with Concept ID Num:C1:SC1 and taxonomy Id numeracy",
            "match": {
              "arguments": [
                {
                  "val": "Num:C1",
                  "offset": 18
                },
                {
                  "val": "isParentOf",
                  "offset": 34
                },
                {
                  "val": "Num:C1:SC1",
                  "offset": 61
                },
                {
                  "val": "numeracy",
                  "offset": 88
                }
              ],
              "location": "DeleteConceptRelationTest.getInputData(String,String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17411416,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.DeleteConceptRelationTest.getConcept(DeleteConceptRelationTest.java:66)\n\tat âœ½.Then Delete the relation and get the status successful(com/ilimi/taxonomy/controller/concept/cucumber/DeleteConceptRelationTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Delete the relation and get the status successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 39
                }
              ],
              "location": "DeleteConceptRelationTest.getConcept(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3180614,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3367436,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3240206,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3212591,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3184957,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3297734,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8808346,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3209838,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3018303,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3467560,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3245510,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3737654,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3234838,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3040459,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3375739,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3267030,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3177823,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3356550,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3349137,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3328178,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3136631,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3008354,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3108387,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3136195,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3267938,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3179544,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3199026,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3417634,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3394464,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Delete a concept using identifier when taxonomy id is empty.",
        "description": "",
        "id": "test-all-scenarios-of-delete-concept.;delete-a-concept-using-identifier-when-taxonomy-id-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 225225,
              "status": "passed"
            },
            "line": 8,
            "name": "I give Concept id Num:C1 Relation isParentOf with Concept ID Num:C1:SC1 and taxonomy Id empty",
            "match": {
              "arguments": [
                {
                  "val": "Num:C1",
                  "offset": 18
                },
                {
                  "val": "isParentOf",
                  "offset": 34
                },
                {
                  "val": "Num:C1:SC1",
                  "offset": 61
                },
                {
                  "val": "empty",
                  "offset": 88
                }
              ],
              "location": "DeleteConceptRelationTest.getInputData(String,String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6680543,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.delete.relat...\u003e but was:\u003cekstep.[]concept.delete.relat...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.DeleteConceptRelationTest.basicAssertion(DeleteConceptRelationTest.java:33)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.DeleteConceptRelationTest.getConceptWithoutTaxonomy(DeleteConceptRelationTest.java:96)\n\tat âœ½.Then I should get ErrMsg Taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/concept/cucumber/DeleteConceptRelationTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I should get ErrMsg Taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 35
                },
                {
                  "val": "400",
                  "offset": 55
                }
              ],
              "location": "DeleteConceptRelationTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3127037,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3041032,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3159384,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3343159,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3248708,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3114856,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7994670,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3663129,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 23321748,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3287845,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3404589,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4300233,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3121489,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3118751,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2965690,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2980588,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3025215,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2978969,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3063008,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3082370,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3093734,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3077198,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3017519,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2981429,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3305174,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3092280,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3090649,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3116231,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3126197,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Delete a concept using identifier when taxonomy is absent.",
        "description": "",
        "id": "test-all-scenarios-of-delete-concept.;delete-a-concept-using-identifier-when-taxonomy-is-absent.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 213593,
              "status": "passed"
            },
            "line": 12,
            "name": "I give Concept id Num:C1 Relation isParentOf with Concept ID Num:C1:SC1 and taxonomy Id absent",
            "match": {
              "arguments": [
                {
                  "val": "Num:C1",
                  "offset": 18
                },
                {
                  "val": "isParentOf",
                  "offset": 34
                },
                {
                  "val": "Num:C1:SC1",
                  "offset": 61
                },
                {
                  "val": "absent",
                  "offset": 88
                }
              ],
              "location": "DeleteConceptRelationTest.getInputData(String,String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3246448,
              "status": "passed"
            },
            "line": 13,
            "name": "I should get ErrMsg Taxonomy Id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 35
                },
                {
                  "val": "400",
                  "offset": 58
                }
              ],
              "location": "DeleteConceptRelationTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3465959,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10704626,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4084274,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3167667,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14322409,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3164002,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5830930,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3067340,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3096910,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3244925,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9209052,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3179352,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3091572,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3227462,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3366393,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5316219,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3188810,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3182945,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13373599,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3153602,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3106132,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3186686,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3070474,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3169234,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3246866,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3213830,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3274745,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3208025,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2937013,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 15,
        "name": "Delete a concept using wrong identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-concept.;delete-a-concept-using-wrong-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 211703,
              "status": "passed"
            },
            "line": 16,
            "name": "I give Concept id ilimi Relation isParentOf with Concept ID Num:C1:SC1 and taxonomy Id numeracy",
            "match": {
              "arguments": [
                {
                  "val": "ilimi",
                  "offset": 18
                },
                {
                  "val": "isParentOf",
                  "offset": 33
                },
                {
                  "val": "Num:C1:SC1",
                  "offset": 60
                },
                {
                  "val": "numeracy",
                  "offset": 87
                }
              ],
              "location": "DeleteConceptRelationTest.getInputData(String,String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12051939,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.DeleteConceptRelationTest.nodeNotFound(DeleteConceptRelationTest.java:113)\n\tat âœ½.Then I should get ErrMsg Node not found and status is 404(com/ilimi/taxonomy/controller/concept/cucumber/DeleteConceptRelationTest.feature:17)\n",
              "status": "failed"
            },
            "line": 17,
            "name": "I should get ErrMsg Node not found and status is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 49
                }
              ],
              "location": "DeleteConceptRelationTest.nodeNotFound(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3124992,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3176508,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3292359,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3418210,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7372388,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4234562,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3429232,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13727008,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3180083,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5913055,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3146064,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3226592,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3239124,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3669593,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3406424,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3179322,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2963261,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2968523,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3088879,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3031939,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3004617,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3176949,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3248203,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3173073,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3175928,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3222445,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3247849,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3189432,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3416783,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 19,
        "name": "Delete a concept using identifier when relation is not supported.",
        "description": "",
        "id": "test-all-scenarios-of-delete-concept.;delete-a-concept-using-identifier-when-relation-is-not-supported.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 252257,
              "status": "passed"
            },
            "line": 20,
            "name": "I give Concept id Num:C1 Relation isParent with Concept ID Num:C1:SC1 and taxonomy Id numeracy",
            "match": {
              "arguments": [
                {
                  "val": "Num:C1",
                  "offset": 18
                },
                {
                  "val": "isParent",
                  "offset": 34
                },
                {
                  "val": "Num:C1:SC1",
                  "offset": 59
                },
                {
                  "val": "numeracy",
                  "offset": 86
                }
              ],
              "location": "DeleteConceptRelationTest.getInputData(String,String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11725109,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c400\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.DeleteConceptRelationTest.unspportedRelation(DeleteConceptRelationTest.java:136)\n\tat âœ½.Then I should get unsupported relation and status is 400(com/ilimi/taxonomy/controller/concept/cucumber/DeleteConceptRelationTest.feature:21)\n",
              "status": "failed"
            },
            "line": 21,
            "name": "I should get unsupported relation and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 48
                }
              ],
              "location": "DeleteConceptRelationTest.unspportedRelation(int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of delete concept.",
    "description": "",
    "id": "test-all-scenarios-of-delete-concept.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/concept/cucumber/DeleteConceptRelationTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3160638,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3067785,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3032101,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3027475,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3137020,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7025202,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3099864,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3283073,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3322199,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4297906,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3213043,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11613074,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3181661,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3445242,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3567085,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3247337,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3680701,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3114102,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2956013,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2929499,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2961340,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2967156,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2988315,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2974200,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2982080,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3203702,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3227501,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3333436,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3068417,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Delete a concept using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-concept.;delete-a-concept-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 324404,
              "status": "passed"
            },
            "line": 4,
            "name": "I Give Taxonomy ID numeracy and Concept ID Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 43
                }
              ],
              "location": "DeleteConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 104683787,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.DeleteConceptTest.create(DeleteConceptTest.java:46)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.DeleteConceptTest.deleteConcept(DeleteConceptTest.java:96)\n\tat âœ½.Then Delete the Concept Id Num:C1(com/ilimi/taxonomy/controller/concept/cucumber/DeleteConceptTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Delete the Concept Id Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "Num:C1",
                  "offset": 22
                }
              ],
              "location": "DeleteConceptTest.deleteConcept(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3279679,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3071710,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3007259,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3115933,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3256482,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2965792,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3197482,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3026337,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2952845,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2937781,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3095863,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2926896,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2940196,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3202239,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3179028,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3093942,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7008992,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2896564,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3136357,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2946385,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2860609,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2917060,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2828998,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2935992,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3355815,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3208044,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3106575,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2999208,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2984356,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Delete a concept using identifier with empty taxonomy id.",
        "description": "",
        "id": "test-all-scenarios-of-delete-concept.;delete-a-concept-using-identifier-with-empty-taxonomy-id.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1768104,
              "status": "passed"
            },
            "line": 8,
            "name": "I Give Taxonomy ID empty and Concept ID Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 40
                }
              ],
              "location": "DeleteConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10920646,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.delete\u003e but was:\u003cekstep.[]concept.delete\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.DeleteConceptTest.basicAssertion(DeleteConceptTest.java:33)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.DeleteConceptTest.getConceptWithoutTaxonomy(DeleteConceptTest.java:134)\n\tat âœ½.Then I should get errMsg taxonomy id is blank and status is 400(com/ilimi/taxonomy/controller/concept/cucumber/DeleteConceptTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I should get errMsg taxonomy id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 35
                },
                {
                  "val": "400",
                  "offset": 55
                }
              ],
              "location": "DeleteConceptTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3088487,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3145412,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3650570,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3424297,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9550144,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3048803,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13381061,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2964545,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3031038,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3083560,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2902784,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3243306,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3141913,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3166567,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3134963,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3011583,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3181883,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3739209,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3126235,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3157033,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3158198,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2893400,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2999442,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2973156,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2969250,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3157059,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3195007,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3132642,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2964617,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Delete a concept using identifier without taxonomy id.",
        "description": "",
        "id": "test-all-scenarios-of-delete-concept.;delete-a-concept-using-identifier-without-taxonomy-id.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 260296,
              "status": "passed"
            },
            "line": 12,
            "name": "I Give Taxonomy ID absent and Concept ID Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 41
                }
              ],
              "location": "DeleteConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3033879,
              "status": "passed"
            },
            "line": 13,
            "name": "I should get errMsg taxonomy id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 35
                },
                {
                  "val": "400",
                  "offset": 58
                }
              ],
              "location": "DeleteConceptTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3003619,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2852582,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2881489,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2870426,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3019599,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3245347,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3144538,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3257515,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9705973,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3238120,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3046656,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2978113,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3031697,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3024582,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10787162,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3435523,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2907778,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2955998,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2904517,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2829119,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2934915,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2868614,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2911843,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2901337,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2860109,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2853174,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2904445,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2829796,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2780130,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 15,
        "name": "Delete a concept using wrong identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-concept.;delete-a-concept-using-wrong-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 203864,
              "status": "passed"
            },
            "line": 16,
            "name": "I Give Taxonomy ID numeracy and Concept ID ilimi",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                },
                {
                  "val": "ilimi",
                  "offset": 43
                }
              ],
              "location": "DeleteConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10496419,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.DeleteConceptTest.nodeNotFound(DeleteConceptTest.java:151)\n\tat âœ½.Then I should get errMsg Node not found and status is 404(com/ilimi/taxonomy/controller/concept/cucumber/DeleteConceptTest.feature:17)\n",
              "status": "failed"
            },
            "line": 17,
            "name": "I should get errMsg Node not found and status is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 49
                }
              ],
              "location": "DeleteConceptTest.nodeNotFound(int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of delete concept.",
    "description": "",
    "id": "test-all-scenarios-of-delete-concept.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/concept/cucumber/DeleteConceptTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3021026,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2862489,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2840163,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2779493,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2863242,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9563219,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5038234,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2909368,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2932674,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14353373,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2989399,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3120118,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2927020,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3007582,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2939296,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3061938,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3327809,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2924296,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2942001,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4186394,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3162232,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3006083,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3012264,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3065377,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3003224,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3034383,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3045560,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3105442,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2973717,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get all concept using identifier .",
        "description": "",
        "id": "test-all-scenarios-of-get-all-concept.;get-all-concept-using-identifier-.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 211235,
              "status": "passed"
            },
            "line": 4,
            "name": "Taxonomy Id is numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 15
                }
              ],
              "location": "GetAllConceptTest.getTaxonomyId(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 14478260,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.list\u003e but was:\u003cekstep.[]concept.list\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetAllConceptTest.basicAssertion(GetAllConceptTest.java:34)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetAllConceptTest.getConcept(GetAllConceptTest.java:66)\n\tat âœ½.Then I should get all numeracy Concepts and status is successful(com/ilimi/taxonomy/controller/concept/cucumber/GetAllConceptTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "I should get all numeracy Concepts and status is successful",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 17
                },
                {
                  "val": "successful",
                  "offset": 49
                }
              ],
              "location": "GetAllConceptTest.getConcept(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3240248,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4668586,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2981335,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2920955,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2893265,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2863657,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2983625,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2835985,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2908935,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2777564,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2861227,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3022461,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2942261,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3204205,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2899172,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2877712,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2979906,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3021882,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2947263,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3012253,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2853611,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2912683,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2994074,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3046723,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2949655,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2892127,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2915372,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2945805,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2933216,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Get a concept using identifier with empty taxonomy Id.",
        "description": "",
        "id": "test-all-scenarios-of-get-all-concept.;get-a-concept-using-identifier-with-empty-taxonomy-id.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 171238,
              "status": "passed"
            },
            "line": 8,
            "name": "Taxonomy Id is blank",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 15
                }
              ],
              "location": "GetAllConceptTest.getTaxonomyId(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4879675,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.list\u003e but was:\u003cekstep.[]concept.list\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetAllConceptTest.basicAssertion(GetAllConceptTest.java:34)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetAllConceptTest.getConceptWithoutAndEmptyTaxonomy(GetAllConceptTest.java:95)\n\tat âœ½.Then I should get ErrorMessage Taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/concept/cucumber/GetAllConceptTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I should get ErrorMessage Taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 61
                }
              ],
              "location": "GetAllConceptTest.getConceptWithoutAndEmptyTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3002900,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2797805,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2789992,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2916483,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2826787,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3110964,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2948883,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 21884456,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2973334,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2830576,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2898339,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5563443,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2856063,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3037778,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3097592,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3003600,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2886993,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2902406,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2885836,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2836600,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3002432,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2815384,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2941435,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2988153,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2738747,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2898094,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2936708,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2935717,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2969604,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Get a concept using identifier without taxonomy Id.",
        "description": "",
        "id": "test-all-scenarios-of-get-all-concept.;get-a-concept-using-identifier-without-taxonomy-id.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 166538,
              "status": "passed"
            },
            "line": 12,
            "name": "Taxonomy Id is absent",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 15
                }
              ],
              "location": "GetAllConceptTest.getTaxonomyId(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2716982,
              "status": "passed"
            },
            "line": 13,
            "name": "I should get ErrorMessage Taxonomy Id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 64
                }
              ],
              "location": "GetAllConceptTest.getConceptWithoutAndEmptyTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get all concept.",
    "description": "",
    "id": "test-all-scenarios-of-get-all-concept.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/concept/cucumber/GetAllConceptTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3041044,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2884842,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2922040,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2921395,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4065308,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2923257,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2954958,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 37046210,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3025215,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3118543,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2833025,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2963687,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2725755,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2817332,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2801443,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2723657,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2910381,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2891513,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2688490,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2796829,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2871936,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2918807,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2913478,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2827830,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2742687,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2828569,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2829129,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3001562,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2889403,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get a concept object using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-concept-object.;get-a-concept-object-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 231178,
              "status": "passed"
            },
            "line": 4,
            "name": "Concept ID is Num:C1 with relation type isParentOf and taxonomy Id is numeracy",
            "match": {
              "arguments": [
                {
                  "val": "Num:C1",
                  "offset": 14
                },
                {
                  "val": "isParentOf",
                  "offset": 40
                },
                {
                  "val": "numeracy",
                  "offset": 70
                }
              ],
              "location": "GetConceptObjectTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11207931,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetConceptObjectTest.getConcept(GetConceptObjectTest.java:64)\n\tat âœ½.Then Get the relation object and status is successful(com/ilimi/taxonomy/controller/concept/cucumber/GetConceptObjectTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Get the relation object and status is successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 38
                }
              ],
              "location": "GetConceptObjectTest.getConcept(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2969688,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2824086,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2774860,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2722233,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3083711,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2961701,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3071024,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3128574,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3163448,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2802125,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3004342,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2885588,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2867921,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2963838,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2903559,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2865601,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3177819,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2913843,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2882209,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2865446,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2886612,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2854078,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2887502,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3046580,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2879233,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2845222,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2864147,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3469493,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2858207,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Get a concept object using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-concept-object.;get-a-concept-object-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 207208,
              "status": "passed"
            },
            "line": 8,
            "name": "Concept ID is Num:C1 with relation type isParentOf and taxonomy Id is empty",
            "match": {
              "arguments": [
                {
                  "val": "Num:C1",
                  "offset": 14
                },
                {
                  "val": "isParentOf",
                  "offset": 40
                },
                {
                  "val": "empty",
                  "offset": 70
                }
              ],
              "location": "GetConceptObjectTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18860059,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.find\u003e but was:\u003cekstep.[]concept.find\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetConceptObjectTest.basicAssertion(GetConceptObjectTest.java:32)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetConceptObjectTest.getConceptWithoutTaxonomy(GetConceptObjectTest.java:95)\n\tat âœ½.Then I Should get ErrMsg Taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/concept/cucumber/GetConceptObjectTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I Should get ErrMsg Taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 35
                },
                {
                  "val": "400",
                  "offset": 55
                }
              ],
              "location": "GetConceptObjectTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2863988,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2886857,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2810777,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9460620,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3072245,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3061456,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2859159,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 17282902,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2995287,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2886063,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2858341,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2787053,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2698205,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2659669,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2707776,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2654990,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2724486,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3014403,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2729428,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2710013,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2897725,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2962504,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2881829,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5005331,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2842050,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3086886,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2880416,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2712428,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2676243,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Get a concept object using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-concept-object.;get-a-concept-object-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 188461,
              "status": "passed"
            },
            "line": 12,
            "name": "Concept ID is Num:C1 with relation type isParentOf and taxonomy Id is absent",
            "match": {
              "arguments": [
                {
                  "val": "Num:C1",
                  "offset": 14
                },
                {
                  "val": "isParentOf",
                  "offset": 40
                },
                {
                  "val": "absent",
                  "offset": 70
                }
              ],
              "location": "GetConceptObjectTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3092047,
              "status": "passed"
            },
            "line": 13,
            "name": "I Should get ErrMsg Taxonomy Id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 35
                },
                {
                  "val": "400",
                  "offset": 58
                }
              ],
              "location": "GetConceptObjectTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get concept object.",
    "description": "",
    "id": "test-all-scenarios-of-get-concept-object.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/concept/cucumber/GetConceptObjectTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3004237,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2962101,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3183605,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2810208,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2712096,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2750974,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2829582,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6139682,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3765068,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2816541,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2766965,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13174369,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2808024,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5455804,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2863138,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2823599,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2890827,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3254671,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2839380,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2961547,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2804479,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2873963,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2882767,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2914412,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2887355,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2899654,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2902550,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2921215,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2766219,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get a concept using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-concept.;get-a-concept-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 233675,
              "status": "passed"
            },
            "line": 4,
            "name": "I give Taxonomy numeracy and Concept ID Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 16
                },
                {
                  "val": "Num:C1",
                  "offset": 40
                }
              ],
              "location": "GetConceptTest.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11059640,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetConceptTest.getConcept(GetConceptTest.java:115)\n\tat âœ½.Then I should get the concept with name Geometry(com/ilimi/taxonomy/controller/concept/cucumber/GetConceptTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "I should get the concept with name Geometry",
            "match": {
              "arguments": [
                {
                  "val": "Geometry",
                  "offset": 35
                }
              ],
              "location": "GetConceptTest.getConcept(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2942012,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3019689,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2756756,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2916698,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2864670,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2806529,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2814334,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3076493,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2755002,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2713882,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2825754,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2799582,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2840476,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2870912,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2798960,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2787739,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2961088,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3063720,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2716582,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2734841,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2682534,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2873138,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2803594,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2807534,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2985795,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2839865,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3043269,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2808927,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2709709,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Get a concept using identifier with empty taxonomy Id.",
        "description": "",
        "id": "test-all-scenarios-of-get-concept.;get-a-concept-using-identifier-with-empty-taxonomy-id.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 186227,
              "status": "passed"
            },
            "line": 8,
            "name": "I give Taxonomy empty and Concept ID Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 16
                },
                {
                  "val": "Num:C1",
                  "offset": 37
                }
              ],
              "location": "GetConceptTest.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6016185,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.find\u003e but was:\u003cekstep.[]concept.find\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetConceptTest.basicAssertion(GetConceptTest.java:37)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetConceptTest.getConceptWithoutTaxonomy(GetConceptTest.java:79)\n\tat âœ½.Then I should get the status as 400 and taxonomy id is blank(com/ilimi/taxonomy/controller/concept/cucumber/GetConceptTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I should get the status as 400 and taxonomy id is blank",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 27
                },
                {
                  "val": "blank",
                  "offset": 50
                }
              ],
              "location": "GetConceptTest.getConceptWithoutTaxonomy(int,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2909165,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2931381,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2987941,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2846702,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2618384,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2694546,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2637098,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6888305,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3425510,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3923662,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13488413,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3141525,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5804957,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2763526,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2753720,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2762354,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2847761,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3032244,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2981018,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2764256,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2810461,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2913492,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2924552,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5219501,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2915595,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2821137,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2875519,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3009232,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3384553,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Get a concept using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-concept.;get-a-concept-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 190224,
              "status": "passed"
            },
            "line": 12,
            "name": "I give Taxonomy absent and Concept ID Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 16
                },
                {
                  "val": "Num:C1",
                  "offset": 38
                }
              ],
              "location": "GetConceptTest.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3130740,
              "status": "passed"
            },
            "line": 13,
            "name": "I should get the status as 400 and taxonomy id is Required",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 27
                },
                {
                  "val": "Required",
                  "offset": 50
                }
              ],
              "location": "GetConceptTest.getConceptWithoutTaxonomy(int,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2940716,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3286640,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2646945,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2748602,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2787434,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2675392,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2749659,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2773956,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 15847297,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2712108,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2790850,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 16502264,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2947090,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2678138,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2799967,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2840167,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2727688,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2699843,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2722531,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2753596,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3010381,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2838810,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2737147,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2616293,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2544199,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2724520,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2615359,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2578542,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2784368,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 15,
        "name": "Get a concept using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-concept.;get-a-concept-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 171420,
              "status": "passed"
            },
            "line": 16,
            "name": "I give Taxonomy numeracy and Concept ID ilimi",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 16
                },
                {
                  "val": "ilimi",
                  "offset": 40
                }
              ],
              "location": "GetConceptTest.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9750960,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.GetConceptTest.nodeNotFound(GetConceptTest.java:95)\n\tat âœ½.Then I should get the status as 404 and node not found(com/ilimi/taxonomy/controller/concept/cucumber/GetConceptTest.feature:17)\n",
              "status": "failed"
            },
            "line": 17,
            "name": "I should get the status as 404 and node not found",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 27
                },
                {
                  "val": "not",
                  "offset": 40
                }
              ],
              "location": "GetConceptTest.nodeNotFound(int,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get concept.",
    "description": "",
    "id": "test-all-scenarios-of-get-concept.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/concept/cucumber/GetConceptTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3157805,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2704713,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2707606,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2612609,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2683446,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 24502621,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2726964,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2745543,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7416144,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2849170,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2716179,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5979970,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2923377,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2820022,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2747117,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2714266,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2604653,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2752730,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2595451,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2616500,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4061952,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2965544,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2558758,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2463795,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2803854,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2746138,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2631553,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2686037,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2649860,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Update a concept.",
        "description": "",
        "id": "test-all-scenarios-of-update-concept.;update-a-concept.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 200933,
              "status": "passed"
            },
            "line": 4,
            "name": "i give Taxonomy ID numeracy and concept is Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 43
                }
              ],
              "location": "UpdateConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 33933818,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.UpdateConceptTest.createConcept(UpdateConceptTest.java:61)\n\tat âœ½.Then update a Concept and get the status successful(com/ilimi/taxonomy/controller/concept/cucumber/UpdateConceptTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "update a Concept and get the status successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 36
                }
              ],
              "location": "UpdateConceptTest.createConcept(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2772883,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2642341,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2697409,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2611559,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2589963,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2656426,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2793330,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2862395,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3010509,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2802938,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2772084,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2626378,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2651808,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2645863,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2603640,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2636389,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2644217,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2792809,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2872494,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3955262,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3003352,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2692369,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2585707,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3343607,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2726534,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4114425,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5552026,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6600387,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4212770,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Update a concept when taxonomy id is empty.",
        "description": "",
        "id": "test-all-scenarios-of-update-concept.;update-a-concept-when-taxonomy-id-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 185523,
              "status": "passed"
            },
            "line": 8,
            "name": "i give Taxonomy ID empty and concept is Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 40
                }
              ],
              "location": "UpdateConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15730885,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.update\u003e but was:\u003cekstep.[]concept.update\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.UpdateConceptTest.basicAssertion(UpdateConceptTest.java:31)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.UpdateConceptTest.getConceptWithoutOrEmptyTaxonomy(UpdateConceptTest.java:91)\n\tat âœ½.Then i should get Error Message Taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/concept/cucumber/UpdateConceptTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "i should get Error Message Taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 42
                },
                {
                  "val": "400",
                  "offset": 62
                }
              ],
              "location": "UpdateConceptTest.getConceptWithoutOrEmptyTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2778153,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2641836,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2576323,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2579720,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6248760,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3524550,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3014042,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 19015085,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5399294,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2895069,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2786168,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3004795,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2767248,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2731153,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2887467,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2641689,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2613848,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2597350,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2920394,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4592548,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2883663,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2782929,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2665060,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2622441,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2664633,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2998123,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2682327,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2607140,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2596122,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Update a concept when taxonomy id is not present.",
        "description": "",
        "id": "test-all-scenarios-of-update-concept.;update-a-concept-when-taxonomy-id-is-not-present.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 173785,
              "status": "passed"
            },
            "line": 12,
            "name": "i give Taxonomy ID absent and concept is Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 41
                }
              ],
              "location": "UpdateConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1263854,
              "status": "passed"
            },
            "line": 13,
            "name": "i should get Error Message Taxonomy Id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 42
                },
                {
                  "val": "400",
                  "offset": 65
                }
              ],
              "location": "UpdateConceptTest.getConceptWithoutOrEmptyTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2867714,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2608443,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2621676,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2658734,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2577664,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2645291,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3431914,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2956665,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6312654,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3631977,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2846902,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13025287,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2716458,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2684617,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5729694,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2658365,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2756659,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2942197,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2835386,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2887362,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2800517,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2695786,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2983230,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2958951,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3414552,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2949986,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3002874,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2839624,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2800825,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 15,
        "name": "Update a concept when concept object is blank.",
        "description": "",
        "id": "test-all-scenarios-of-update-concept.;update-a-concept-when-concept-object-is-blank.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 171649,
              "status": "passed"
            },
            "line": 16,
            "name": "i give Taxonomy ID numeracy and concept is Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 43
                }
              ],
              "location": "UpdateConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5303099,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]concept.update\u003e but was:\u003cekstep.[]concept.update\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.UpdateConceptTest.basicAssertion(UpdateConceptTest.java:31)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.UpdateConceptTest.i_should_get_errMsg_is_Validation_Error(UpdateConceptTest.java:115)\n\tat âœ½.Then i should get errMsg is concept object is blank(com/ilimi/taxonomy/controller/concept/cucumber/UpdateConceptTest.feature:17)\n",
              "status": "failed"
            },
            "line": 17,
            "name": "i should get errMsg is concept object is blank",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 41
                }
              ],
              "location": "UpdateConceptTest.i_should_get_errMsg_is_Validation_Error(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2721069,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2631108,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2805032,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2710221,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2918804,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2951512,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2876939,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3975121,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3012905,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2694980,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 22261283,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2870204,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2621951,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2804931,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2573520,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2522656,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2585928,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2951354,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2928109,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3094330,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2901363,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2902004,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2976407,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2848913,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3159583,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3660311,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2655860,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2738766,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2721084,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 19,
        "name": "Update a concept using wron identifier.",
        "description": "",
        "id": "test-all-scenarios-of-update-concept.;update-a-concept-using-wron-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 170937,
              "status": "passed"
            },
            "line": 20,
            "name": "i give Taxonomy ID numeracy and concept is Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 43
                }
              ],
              "location": "UpdateConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 21,
            "name": "i should get errMsg is Node Metadata validation failed",
            "match": {},
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2849542,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2654489,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2802257,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2749000,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2805797,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2811441,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2797514,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2699737,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2748165,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2699116,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2834064,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2671832,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2666336,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12117761,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2835179,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2781128,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2859140,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2822534,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2762298,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2832524,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2680153,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2681573,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2777542,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2542831,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2520746,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2696610,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4124109,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2742190,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2582594,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 23,
        "name": "Update a concept when object type is blank.",
        "description": "",
        "id": "test-all-scenarios-of-update-concept.;update-a-concept-when-object-type-is-blank.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 193478,
              "status": "passed"
            },
            "line": 24,
            "name": "i give Taxonomy ID numeracy and concept is Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 43
                }
              ],
              "location": "UpdateConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 25633553,
              "status": "passed"
            },
            "line": 25,
            "name": "i should get errMsg is concept object type is blank",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 46
                }
              ],
              "location": "UpdateConceptTest.i_should_get_errMsg_is_Concept_Object_is_blank(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12732641,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3636727,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2794915,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2666585,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4520750,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2751110,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8246124,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3096556,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2775696,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2577053,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2760252,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2742270,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2653382,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2806298,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4884511,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2707433,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2673603,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2615253,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2704691,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2734434,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2666144,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2637301,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2681668,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2967332,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2818503,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2969299,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2812223,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2627067,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2718779,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 27,
        "name": "Update a concept when metadata is missing.",
        "description": "",
        "id": "test-all-scenarios-of-update-concept.;update-a-concept-when-metadata-is-missing.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 175074,
              "status": "passed"
            },
            "line": 28,
            "name": "i give Taxonomy ID numeracy and concept is Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 43
                }
              ],
              "location": "UpdateConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26498712,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[Required Metadata code not se]t\u003e but was:\u003c[Definition node not found for Object Type: Concep]t\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.UpdateConceptTest.i_should_get_errMsg_is_metadata_name_is_not_set(UpdateConceptTest.java:188)\n\tat âœ½.Then i should get errMsg is metadata code is not set(com/ilimi/taxonomy/controller/concept/cucumber/UpdateConceptTest.feature:29)\n",
              "status": "failed"
            },
            "line": 29,
            "name": "i should get errMsg is metadata code is not set",
            "match": {
              "arguments": [
                {
                  "val": "code",
                  "offset": 32
                }
              ],
              "location": "UpdateConceptTest.i_should_get_errMsg_is_metadata_name_is_not_set(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2905465,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7371992,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3558767,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13047402,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2754474,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2748036,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7046495,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3323688,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3161926,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2714062,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2618550,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2790372,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2604149,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2752425,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2634149,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2780058,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2714285,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2633169,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2644575,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2569230,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2540782,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2761002,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2768186,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2661827,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2689562,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2698046,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2665885,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2620599,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2699628,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 31,
        "name": "Update a concept where node is invalid.",
        "description": "",
        "id": "test-all-scenarios-of-update-concept.;update-a-concept-where-node-is-invalid.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 168606,
              "status": "passed"
            },
            "line": 32,
            "name": "i give Taxonomy ID numeracy and concept is Num:C1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                },
                {
                  "val": "Num:C1",
                  "offset": 43
                }
              ],
              "location": "UpdateConceptTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 31036666,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[java.lang.Integer cannot be cast to java.lang.String]\u003e but was:\u003c[Definition node not found for Object Type: Concept]\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.concept.cucumber.UpdateConceptTest.i_should_get_errMsg_is_Relation_is_not_supported(UpdateConceptTest.java:214)\n\tat âœ½.Then i should get errMsg is invalid node(com/ilimi/taxonomy/controller/concept/cucumber/UpdateConceptTest.feature:33)\n",
              "status": "failed"
            },
            "line": 33,
            "name": "i should get errMsg is invalid node",
            "match": {
              "location": "UpdateConceptTest.i_should_get_errMsg_is_Relation_is_not_supported()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of update concept.",
    "description": "",
    "id": "test-all-scenarios-of-update-concept.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/concept/cucumber/UpdateConceptTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3881341,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3692051,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3380251,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3226554,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3323601,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3179352,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3321100,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13365960,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3240526,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3256973,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13584628,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5754205,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3388794,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3334299,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3403398,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3179043,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3258403,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5236753,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3384388,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3246022,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3286761,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3325937,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3408974,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4354107,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4527391,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3305215,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3303094,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2902513,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3168560,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get list of games without any filters",
        "description": "",
        "id": "bdd-test-scenarios-for-game-service;get-list-of-games-without-any-filters",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 116536975,
              "status": "passed"
            },
            "line": 4,
            "name": "Subject is blank",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 11
                }
              ],
              "location": "GameServiceTest.getGames(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 397139,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.game.GameServiceTest.assertOKResult(GameServiceTest.java:64)\n\tat âœ½.Then return status is successful and response code is 200(com/ilimi/taxonomy/controller/game/GameService.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "return status is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 17
                },
                {
                  "val": "200",
                  "offset": 49
                }
              ],
              "location": "GameServiceTest.assertOKResult(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "Subject is numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 11
                }
              ],
              "location": "GameServiceTest.getGames(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "return status is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 17
                },
                {
                  "val": "200",
                  "offset": 49
                }
              ],
              "location": "GameServiceTest.assertOKResult(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "Subject is invalid",
            "match": {
              "arguments": [
                {
                  "val": "invalid",
                  "offset": 11
                }
              ],
              "location": "GameServiceTest.getGames(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "return status is successful and response code is 200 and games list size is eq 0",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 17
                },
                {
                  "val": "200",
                  "offset": 49
                },
                {
                  "val": "eq",
                  "offset": 76
                },
                {
                  "val": "0",
                  "offset": 79
                }
              ],
              "location": "GameServiceTest.assertInvalidSubjectResult(String,int,String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2860715,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2518621,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2587036,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2614647,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2649660,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2636513,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2902670,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2813257,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2685367,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2680759,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2788470,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2741960,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2777497,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8421537,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2678495,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2764656,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2891856,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2774995,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2889961,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2916947,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2689009,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2647848,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2812729,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2783177,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2745969,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2695085,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2909813,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2928067,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2997215,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 13,
        "name": "Get list of games with filters",
        "description": "",
        "id": "bdd-test-scenarios-for-game-service;get-list-of-games-with-filters",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 49693829,
              "status": "passed"
            },
            "line": 14,
            "name": "Status is Mock",
            "match": {
              "arguments": [
                {
                  "val": "Mock",
                  "offset": 10
                }
              ],
              "location": "GameServiceTest.getGamesWithStatusFilter(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 407901,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.game.GameServiceTest.assertInvalidSubjectResult(GameServiceTest.java:72)\n\tat âœ½.Then return status is successful and response code is 200 and games list size is gt 0(com/ilimi/taxonomy/controller/game/GameService.feature:15)\n",
              "status": "failed"
            },
            "line": 15,
            "name": "return status is successful and response code is 200 and games list size is gt 0",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 17
                },
                {
                  "val": "200",
                  "offset": 49
                },
                {
                  "val": "gt",
                  "offset": 76
                },
                {
                  "val": "0",
                  "offset": 79
                }
              ],
              "location": "GameServiceTest.assertInvalidSubjectResult(String,int,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "Fields parameter is name",
            "match": {
              "arguments": [
                {
                  "val": "name",
                  "offset": 20
                }
              ],
              "location": "GameServiceTest.getGamesWithReturnFields(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "return status is successful and games list has only name",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 17
                },
                {
                  "val": "name",
                  "offset": 52
                }
              ],
              "location": "GameServiceTest.assertReturnFields(String,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "BDD test scenarios for Game Service",
    "description": "",
    "id": "bdd-test-scenarios-for-game-service",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/game/GameService.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2983858,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2752888,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2650565,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2627688,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3383912,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2631963,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2584949,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2673527,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2861178,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9540286,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3427465,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2833285,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2726674,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2598276,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2608940,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2893416,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2781851,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2671248,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2570978,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2857344,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2535064,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2623684,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2706009,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2627394,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2712288,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2633681,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2744973,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2634066,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2714085,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Create a Game.",
        "description": "",
        "id": "test-all-scenarios-of-create-game.;create-a-game.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 235310,
              "status": "passed"
            },
            "line": 4,
            "name": "i give taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateGameTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26197599,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.createGame(CreateGameTest.java:61)\n\tat âœ½.Then Create a Game and get the status successful(com/ilimi/taxonomy/controller/lob/cucumber/CreateGameTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Create a Game and get the status successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 33
                }
              ],
              "location": "CreateGameTest.createGame(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2792082,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2625029,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2634563,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2544504,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2714338,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2572590,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2710503,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2644933,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2636434,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2683344,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2609310,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2734110,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2633124,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3117651,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2684150,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2761450,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2787234,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2566819,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2539837,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2598532,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2514237,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2546399,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2607750,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2610929,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2634570,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2640865,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2579367,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2562634,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2570319,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Create a Game when taxonomy Id is empty.",
        "description": "",
        "id": "test-all-scenarios-of-create-game.;create-a-game-when-taxonomy-id-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 168825,
              "status": "passed"
            },
            "line": 8,
            "name": "i give taxonomy ID empty",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 19
                }
              ],
              "location": "CreateGameTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11244812,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.creat...\u003e but was:\u003cekstep.l[]earning-object.creat...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.basicAssertion(CreateGameTest.java:31)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.getConceptWithoutTaxonomy(CreateGameTest.java:90)\n\tat âœ½.Then i will get Error Message Taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/lob/cucumber/CreateGameTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "i will get Error Message Taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 40
                },
                {
                  "val": "400",
                  "offset": 60
                }
              ],
              "location": "CreateGameTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2797413,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2599693,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2663470,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2542018,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2547973,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6321860,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3504235,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2852650,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5613098,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2665086,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2565832,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2583322,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2662486,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2675881,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5261170,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2733963,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2525428,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2763115,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2542093,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2497403,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2612424,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2878378,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2577875,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2510360,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2572597,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2610590,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2680504,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2696554,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3097818,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Create a Game when taxonomy Id is absent.",
        "description": "",
        "id": "test-all-scenarios-of-create-game.;create-a-game-when-taxonomy-id-is-absent.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 164395,
              "status": "passed"
            },
            "line": 12,
            "name": "i give taxonomy ID absent",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 19
                }
              ],
              "location": "CreateGameTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1387736,
              "status": "passed"
            },
            "line": 13,
            "name": "i will get Error Message Taxonomy Id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 40
                },
                {
                  "val": "400",
                  "offset": 63
                }
              ],
              "location": "CreateGameTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2747580,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2625025,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2600476,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2717103,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2578021,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2561711,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3873057,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2637787,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2562883,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6399526,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3395458,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2699858,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12905119,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2737331,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2628246,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7344143,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2647197,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2723706,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4956172,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2895009,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2676579,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2830599,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2613438,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2675633,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2659695,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2746432,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2741489,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2717280,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2747709,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 15,
        "name": "Create a Game when game object is blank.",
        "description": "",
        "id": "test-all-scenarios-of-create-game.;create-a-game-when-game-object-is-blank.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 176991,
              "status": "passed"
            },
            "line": 16,
            "name": "i give taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateGameTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5076087,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.creat...\u003e but was:\u003cekstep.l[]earning-object.creat...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.basicAssertion(CreateGameTest.java:31)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.i_should_get_errMsg_is_Validation_Error(CreateGameTest.java:113)\n\tat âœ½.Then i will get errMsg is blank learning object(com/ilimi/taxonomy/controller/lob/cucumber/CreateGameTest.feature:17)\n",
              "status": "failed"
            },
            "line": 17,
            "name": "i will get errMsg is blank learning object",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 21
                }
              ],
              "location": "CreateGameTest.i_should_get_errMsg_is_Validation_Error(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2834822,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2725280,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2762083,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2691315,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2698547,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2804750,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2818142,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2923580,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7246871,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3456271,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2598758,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2971973,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2592445,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2679656,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2548245,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2642767,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2628800,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2568190,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5276072,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2636107,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2932915,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2934625,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2746808,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2819863,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2568236,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2485948,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2677023,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2621235,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2586892,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 19,
        "name": "Create a Game when object type is empty.",
        "description": "",
        "id": "test-all-scenarios-of-create-game.;create-a-game-when-object-type-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 165468,
              "status": "passed"
            },
            "line": 20,
            "name": "i give taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateGameTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 16662661,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.creat...\u003e but was:\u003cekstep.l[]earning-object.creat...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.basicAssertion(CreateGameTest.java:31)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.i_should_get_errMsg_is_Concept_Object_is_blank(CreateGameTest.java:137)\n\tat âœ½.Then i will get errMsg is Game Object is empty(com/ilimi/taxonomy/controller/lob/cucumber/CreateGameTest.feature:21)\n",
              "status": "failed"
            },
            "line": 21,
            "name": "i will get errMsg is Game Object is empty",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 36
                }
              ],
              "location": "CreateGameTest.i_should_get_errMsg_is_Concept_Object_is_blank(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2853226,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2955226,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2687781,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 22109068,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2661296,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3182746,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2590332,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2752108,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2646802,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2512674,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2584666,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3029207,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2631884,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2601361,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2696133,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2620071,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2870738,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2839967,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2919211,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2689144,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2632005,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2504164,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2523831,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2533584,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2528872,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2520155,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2509588,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2623665,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2533753,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 23,
        "name": "Create a Game with missing metadata.",
        "description": "",
        "id": "test-all-scenarios-of-create-game.;create-a-game-with-missing-metadata.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 163954,
              "status": "passed"
            },
            "line": 24,
            "name": "i give taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateGameTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 22963631,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.creat...\u003e but was:\u003cekstep.l[]earning-object.creat...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.basicAssertion(CreateGameTest.java:31)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.i_should_get_errMsg_is_metadata_name_is_not_set(CreateGameTest.java:164)\n\tat âœ½.Then i will get errMsg is metadata name is not set(com/ilimi/taxonomy/controller/lob/cucumber/CreateGameTest.feature:25)\n",
              "status": "failed"
            },
            "line": 25,
            "name": "i will get errMsg is metadata name is not set",
            "match": {
              "arguments": [
                {
                  "val": "name",
                  "offset": 30
                }
              ],
              "location": "CreateGameTest.i_should_get_errMsg_is_metadata_name_is_not_set(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3000712,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2543336,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6585267,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3355672,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2673547,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12875455,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2642771,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5274463,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2723453,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2564152,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2524863,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2711200,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2818989,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2798915,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2747915,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2685973,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2736487,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2701952,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2555918,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2638419,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2948943,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2647268,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2628313,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2555391,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2595884,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2492833,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2524344,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2706571,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2527383,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 27,
        "name": "Create a Game with invalid data.",
        "description": "",
        "id": "test-all-scenarios-of-create-game.;create-a-game-with-invalid-data.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 166131,
              "status": "passed"
            },
            "line": 28,
            "name": "i give taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateGameTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26487995,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.creat...\u003e but was:\u003cekstep.l[]earning-object.creat...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.basicAssertion(CreateGameTest.java:31)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.invalidDataType(CreateGameTest.java:189)\n\tat âœ½.Then i will get errMsg is validation error and status 400(com/ilimi/taxonomy/controller/lob/cucumber/CreateGameTest.feature:29)\n",
              "status": "failed"
            },
            "line": 29,
            "name": "i will get errMsg is validation error and status 400",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 49
                }
              ],
              "location": "CreateGameTest.invalidDataType(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2820319,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 18677030,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2751212,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2990232,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2678745,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2649856,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2810706,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2582889,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2608775,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2633569,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2556464,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2560599,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2669719,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2722576,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2860798,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2957645,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2742710,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2591651,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2731624,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2529715,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2547348,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2606937,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2534409,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2512007,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2542786,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2714684,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2542805,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2594378,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2844894,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 31,
        "name": "Unspported Relation for creating a Game .",
        "description": "",
        "id": "test-all-scenarios-of-create-game.;unspported-relation-for-creating-a-game-.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 165476,
              "status": "passed"
            },
            "line": 32,
            "name": "i give taxonomy ID numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "CreateGameTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 19707762,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[Relation isParent is not supported]\u003e but was:\u003c[Definition node not found for Object Type: Game]\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.CreateGameTest.i_should_get_errMsg_is_Relation_is_not_supported(CreateGameTest.java:216)\n\tat âœ½.Then i will get errMsg is Relation is not supported(com/ilimi/taxonomy/controller/lob/cucumber/CreateGameTest.feature:33)\n",
              "status": "failed"
            },
            "line": 33,
            "name": "i will get errMsg is Relation is not supported",
            "match": {
              "arguments": [
                {
                  "val": "not",
                  "offset": 33
                }
              ],
              "location": "CreateGameTest.i_should_get_errMsg_is_Relation_is_not_supported(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of create Game.",
    "description": "",
    "id": "test-all-scenarios-of-create-game.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/lob/cucumber/CreateGameTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2677942,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2612451,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2563334,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 16672184,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2599361,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2559662,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10508888,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2778962,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2753031,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3158265,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2745617,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2583901,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2613272,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2541464,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2584451,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2531090,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2537738,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2523636,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2619427,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2524460,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2580628,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2762659,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2655472,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2706032,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2711135,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2765552,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2658915,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2634698,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2620015,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Delete a Game using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-relation-game.;delete-a-game-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 248554,
              "status": "passed"
            },
            "line": 4,
            "name": "I give Game Id G1 Relation isParentOf with Game Id G1:M1 and taxonomy Id numeracy",
            "match": {
              "arguments": [
                {
                  "val": "G1",
                  "offset": 15
                },
                {
                  "val": "isParentOf",
                  "offset": 27
                },
                {
                  "val": "G1:M1",
                  "offset": 51
                },
                {
                  "val": "numeracy",
                  "offset": 73
                }
              ],
              "location": "DeleteGameRelationTest.getInputData(String,String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13276963,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.DeleteGameRelationTest.getConcept(DeleteGameRelationTest.java:69)\n\tat âœ½.Then Delete the Relation and get the status successful(com/ilimi/taxonomy/controller/lob/cucumber/DeleteGameRelationTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Delete the Relation and get the status successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 39
                }
              ],
              "location": "DeleteGameRelationTest.getConcept(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2611227,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2425135,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2505373,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2402203,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2445164,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2470044,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2408708,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2378863,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2508164,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2914755,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2680838,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2638220,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2630525,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2606002,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2660245,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2802087,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2768905,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2607445,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2602917,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2681833,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2670988,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2624596,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2537871,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2607976,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2612138,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2628607,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2690132,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2617608,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2488057,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Delete a Game using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-relation-game.;delete-a-game-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 227361,
              "status": "passed"
            },
            "line": 8,
            "name": "I give Game Id G1 Relation isParentOf with Game Id G1:M1 and taxonomy Id empty",
            "match": {
              "arguments": [
                {
                  "val": "G1",
                  "offset": 15
                },
                {
                  "val": "isParentOf",
                  "offset": 27
                },
                {
                  "val": "G1:M1",
                  "offset": 51
                },
                {
                  "val": "empty",
                  "offset": 73
                }
              ],
              "location": "DeleteGameRelationTest.getInputData(String,String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3767378,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.delet...\u003e but was:\u003cekstep.l[]earning-object.delet...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.DeleteGameRelationTest.basicAssertion(DeleteGameRelationTest.java:32)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.DeleteGameRelationTest.getConceptWithoutTaxonomy(DeleteGameRelationTest.java:98)\n\tat âœ½.Then I will get ErrMsg Taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/lob/cucumber/DeleteGameRelationTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I will get ErrMsg Taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 33
                },
                {
                  "val": "400",
                  "offset": 53
                }
              ],
              "location": "DeleteGameRelationTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2731808,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2556408,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2598868,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2883387,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3255985,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2619243,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2880295,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2690184,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2754805,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2577871,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2576372,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8822999,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2584851,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3303109,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2677802,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2521688,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2513856,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2455305,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2484611,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2484826,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2449552,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2485616,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2440689,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2455519,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2448806,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2472753,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2486750,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2457685,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2458559,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Delete a Game using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-relation-game.;delete-a-game-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 193614,
              "status": "passed"
            },
            "line": 12,
            "name": "I give Game Id G1 Relation isParentOf with Game Id G1:M1 and taxonomy Id absent",
            "match": {
              "arguments": [
                {
                  "val": "G1",
                  "offset": 15
                },
                {
                  "val": "isParentOf",
                  "offset": 27
                },
                {
                  "val": "G1:M1",
                  "offset": 51
                },
                {
                  "val": "absent",
                  "offset": 73
                }
              ],
              "location": "DeleteGameRelationTest.getInputData(String,String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1408882,
              "status": "passed"
            },
            "line": 13,
            "name": "I will get ErrMsg Taxonomy Id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 33
                },
                {
                  "val": "400",
                  "offset": 56
                }
              ],
              "location": "DeleteGameRelationTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of delete Relation Game.",
    "description": "",
    "id": "test-all-scenarios-of-delete-relation-game.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/lob/cucumber/DeleteGameRelationTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2630212,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2499629,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2489169,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2483706,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2467396,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2546485,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2954842,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3469948,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2748432,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3412394,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2829058,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2586791,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2711150,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2643811,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2644970,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5053448,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2811783,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2478327,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2533598,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2579329,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2469905,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2524713,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3897539,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2642476,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2765432,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2659036,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2746206,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2770803,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2792519,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Delete a Game using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-game.;delete-a-game-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 246915,
              "status": "passed"
            },
            "line": 4,
            "name": "I Give input taxonomy ID numeracy and Game ID G1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 25
                },
                {
                  "val": "G1",
                  "offset": 46
                }
              ],
              "location": "DeleteGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20183327,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.DeleteGameTest.createGame(DeleteGameTest.java:48)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.DeleteGameTest.deleteGame(DeleteGameTest.java:77)\n\tat âœ½.Then Delete the Game Id G1(com/ilimi/taxonomy/controller/lob/cucumber/DeleteGameTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Delete the Game Id G1",
            "match": {
              "arguments": [
                {
                  "val": "G1",
                  "offset": 19
                }
              ],
              "location": "DeleteGameTest.deleteGame(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4259739,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2777734,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3020939,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3049797,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2667380,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2651137,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2671975,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2504775,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2507253,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2485797,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2521330,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2607995,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2600307,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3577097,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2507039,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2537230,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2755438,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2734871,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2759928,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2682206,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2824598,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2861650,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4241101,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2696314,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2597195,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2694302,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2730908,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2757577,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2736355,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Delete a Game using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-game.;delete-a-game-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 193663,
              "status": "passed"
            },
            "line": 8,
            "name": "I Give input taxonomy ID empty and Game ID G1",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 25
                },
                {
                  "val": "G1",
                  "offset": 43
                }
              ],
              "location": "DeleteGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7523922,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.delet...\u003e but was:\u003cekstep.l[]earning-object.delet...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.DeleteGameTest.basicAssertion(DeleteGameTest.java:60)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.DeleteGameTest.getConceptWithoutTaxonomy(DeleteGameTest.java:115)\n\tat âœ½.Then I should get Error Taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/lob/cucumber/DeleteGameTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I should get Error Taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 34
                },
                {
                  "val": "400",
                  "offset": 54
                }
              ],
              "location": "DeleteGameTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2789325,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2977040,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2732423,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2809621,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2673855,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2730689,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2589394,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9059063,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2750970,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2637843,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12783445,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2690293,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5197800,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2567494,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2874261,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2770600,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2884676,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2667741,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2730889,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2761887,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2762697,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2776661,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2719672,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2589654,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2651276,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2892617,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2714281,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2653694,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2560015,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Delete a Game using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-game.;delete-a-game-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 170294,
              "status": "passed"
            },
            "line": 12,
            "name": "I Give input taxonomy ID absent and Game ID G1",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 25
                },
                {
                  "val": "G1",
                  "offset": 44
                }
              ],
              "location": "DeleteGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2314705,
              "status": "passed"
            },
            "line": 13,
            "name": "I should get Error Taxonomy Id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 34
                },
                {
                  "val": "400",
                  "offset": 57
                }
              ],
              "location": "DeleteGameTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of delete Game.",
    "description": "",
    "id": "test-all-scenarios-of-delete-game.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/lob/cucumber/DeleteGameTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2703256,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2546847,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2467023,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2417873,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2516769,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2466036,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2490863,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2509977,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2519345,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5688202,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 23637639,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2636792,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2749554,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2934365,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2681388,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4671241,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3342187,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2575321,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2653148,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2740969,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2564333,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2507351,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2544817,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2499512,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4549176,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2632585,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2640616,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2704808,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2690516,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get all concept using identifier .",
        "description": "",
        "id": "test-all-scenarios-of-get-all-concept.;get-all-concept-using-identifier-.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 208892,
              "status": "passed"
            },
            "line": 4,
            "name": "i give taxonomy id is numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 22
                }
              ],
              "location": "GetAllGamesTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11897207,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.GetAllGamesTest.createConcept(GetAllGamesTest.java:63)\n\tat âœ½.Then i should get all games with status successful(com/ilimi/taxonomy/controller/lob/cucumber/GetAllGamesTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "i should get all games with status successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 35
                }
              ],
              "location": "GetAllGamesTest.createConcept(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2700389,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2685065,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2646477,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2725002,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2620109,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2694015,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4535317,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3141728,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2661172,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2741166,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2594713,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2755299,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5329320,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2576963,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2309465,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2498880,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9013623,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2670020,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2527425,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2745704,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2584648,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2526803,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2630148,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2622031,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2470500,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2596359,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5118412,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2676507,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2676288,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Get a game using identifier with empty taxonomy Id.",
        "description": "",
        "id": "test-all-scenarios-of-get-all-concept.;get-a-game-using-identifier-with-empty-taxonomy-id.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 175597,
              "status": "passed"
            },
            "line": 8,
            "name": "i give taxonomy id is empty",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 22
                }
              ],
              "location": "GetAllGamesTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4752512,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.list\u003e but was:\u003cekstep.l[]earning-object.list\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.GetAllGamesTest.basicAssertion(GetAllGamesTest.java:35)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.GetAllGamesTest.getConceptWithoutTaxonomy(GetAllGamesTest.java:96)\n\tat âœ½.Then i should get Message Taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/lob/cucumber/GetAllGamesTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "i should get Message Taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 56
                }
              ],
              "location": "GetAllGamesTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2603772,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2411371,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5694180,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2676145,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2575396,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2569222,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2534013,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10390664,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2843060,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2652681,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12835854,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2623993,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5139819,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2661974,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2565779,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2645023,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2516844,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2782115,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2706404,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2857514,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2838592,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2592645,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2744661,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2637342,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2619510,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2683679,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2636571,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2758184,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2724960,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Get a game using identifier without taxonomy Id.",
        "description": "",
        "id": "test-all-scenarios-of-get-all-concept.;get-a-game-using-identifier-without-taxonomy-id.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 166922,
              "status": "passed"
            },
            "line": 12,
            "name": "i give taxonomy id is absent",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 22
                }
              ],
              "location": "GetAllGamesTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2229344,
              "status": "passed"
            },
            "line": 13,
            "name": "i should get Message Taxonomy Id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 36
                },
                {
                  "val": "400",
                  "offset": 59
                }
              ],
              "location": "GetAllGamesTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get all concept.",
    "description": "",
    "id": "test-all-scenarios-of-get-all-concept.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/lob/cucumber/GetAllGamesTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2813622,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2745772,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2833044,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2749344,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2955946,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2912819,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2708634,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2875812,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6520940,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3591664,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2634570,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2642680,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2660188,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2533926,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2544685,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11740425,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2800204,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2660753,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2897216,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2754741,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2654768,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2749114,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2714097,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2627036,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2441141,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2685962,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2634321,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2629232,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2373740,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get a Game using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-game.;get-a-game-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 238583,
              "status": "passed"
            },
            "line": 4,
            "name": "taxonomy id is numeracy and Game Id is G1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 15
                },
                {
                  "val": "G1",
                  "offset": 39
                }
              ],
              "location": "GetGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11961771,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.GetGameTest.createConcept(GetGameTest.java:64)\n\tat âœ½.Then i should get the Game with status successful(com/ilimi/taxonomy/controller/lob/cucumber/GetGameTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "i should get the Game with status successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 34
                }
              ],
              "location": "GetGameTest.createConcept(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2825984,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2536669,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2627308,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6137448,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2704039,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3763449,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2550524,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2915241,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2915493,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2728290,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2700415,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2600679,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2616244,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2615200,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2673158,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2823069,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2686154,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2552674,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3037928,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2651012,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2547936,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2613385,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2599173,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2868524,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2724459,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2900980,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3123056,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4564481,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2758832,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Get a Game using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-game.;get-a-game-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 189474,
              "status": "passed"
            },
            "line": 8,
            "name": "taxonomy id is empty and Game Id is G1",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 15
                },
                {
                  "val": "G1",
                  "offset": 36
                }
              ],
              "location": "GetGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5377796,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.find\u003e but was:\u003cekstep.l[]earning-object.find\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.GetGameTest.basicAssertion(GetGameTest.java:33)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.GetGameTest.getConceptWithoutTaxonomy(GetGameTest.java:94)\n\tat âœ½.Then i should get Error message Taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/lob/cucumber/GetGameTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "i should get Error message Taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 42
                },
                {
                  "val": "400",
                  "offset": 62
                }
              ],
              "location": "GetGameTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2942894,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2650211,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2571678,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2550075,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2567339,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2606349,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 35813339,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2723755,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2641261,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2906046,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3164623,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2940121,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2579068,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2473675,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2689175,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2631286,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2514301,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2440730,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2703033,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2626276,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2712180,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2593884,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2615457,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2517345,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2544183,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2481876,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2446828,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2673049,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2628603,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Get a Game using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-game.;get-a-game-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 175013,
              "status": "passed"
            },
            "line": 12,
            "name": "taxonomy id is absent and Game Id is G1",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 15
                },
                {
                  "val": "G1",
                  "offset": 37
                }
              ],
              "location": "GetGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2656486,
              "status": "passed"
            },
            "line": 13,
            "name": "i should get Error message Taxonomy Id is Requried and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Requried",
                  "offset": 42
                },
                {
                  "val": "400",
                  "offset": 65
                }
              ],
              "location": "GetGameTest.getConceptWithoutTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2758603,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2571690,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2547755,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2461912,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2513265,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2566909,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2563900,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2506436,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2548505,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5737710,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3756499,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2961166,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2573445,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3001650,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3064647,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3102289,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3210048,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9761530,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3115149,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3236989,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3246455,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3255850,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3139672,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2835229,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 56457402,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2571223,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2653985,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2604713,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2686433,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 15,
        "name": "Get a Game using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-game.;get-a-game-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 171634,
              "status": "passed"
            },
            "line": 16,
            "name": "taxonomy id is numeracy and Game Id is jeetu",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 15
                },
                {
                  "val": "jeetu",
                  "offset": 39
                }
              ],
              "location": "GetGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9516947,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.GetGameTest.nodeNotFound(GetGameTest.java:112)\n\tat âœ½.Then i should get Error message Node not found and status is 404(com/ilimi/taxonomy/controller/lob/cucumber/GetGameTest.feature:17)\n",
              "status": "failed"
            },
            "line": 17,
            "name": "i should get Error message Node not found and status is 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 56
                }
              ],
              "location": "GetGameTest.nodeNotFound(int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get Game.",
    "description": "",
    "id": "test-all-scenarios-of-get-game.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/lob/cucumber/GetGameTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2674119,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2569241,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2721118,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2598985,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2640386,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2619563,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5609678,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3412074,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2747332,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12839003,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2624441,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2569241,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5148788,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2593646,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2450557,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2633625,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2588791,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2447304,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2485605,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2782828,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2477487,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2450490,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2651329,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11102959,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2588833,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2633252,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3844957,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2565689,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2475228,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Update a Game.",
        "description": "",
        "id": "test-all-scenarios-of-update-game.;update-a-game.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 204132,
              "status": "passed"
            },
            "line": 4,
            "name": "i give input taxonomy ID is numeracy and concept ID is G1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 28
                },
                {
                  "val": "G1",
                  "offset": 55
                }
              ],
              "location": "UpdateGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 23759201,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.UpdateGameTest.updateGame(UpdateGameTest.java:66)\n\tat âœ½.Then Update the Game and get the status successful(com/ilimi/taxonomy/controller/lob/cucumber/UpdateGameTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Update the Game and get the status successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 35
                }
              ],
              "location": "UpdateGameTest.updateGame(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2617216,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2476425,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2303687,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2417443,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2749012,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2758542,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3586405,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2862214,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2736578,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2573667,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2554068,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2653992,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2593432,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2609957,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2694735,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4797858,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2613509,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2761665,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2763141,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2703323,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2835616,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2705982,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2624340,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2808559,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2704193,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2545600,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2812457,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2706303,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2597418,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Update a Game when taxonomy id is empty.",
        "description": "",
        "id": "test-all-scenarios-of-update-game.;update-a-game-when-taxonomy-id-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 189851,
              "status": "passed"
            },
            "line": 8,
            "name": "i give input taxonomy ID is empty and concept ID is G1",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 28
                },
                {
                  "val": "G1",
                  "offset": 52
                }
              ],
              "location": "UpdateGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7654994,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.updat...\u003e but was:\u003cekstep.l[]earning-object.updat...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.UpdateGameTest.basicAssertion(UpdateGameTest.java:31)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.UpdateGameTest.getConceptWithoutOrEmptyTaxonomy(UpdateGameTest.java:97)\n\tat âœ½.Then i should get Error Message taxonomy Id is blank and status is 400(com/ilimi/taxonomy/controller/lob/cucumber/UpdateGameTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "i should get Error Message taxonomy Id is blank and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 42
                },
                {
                  "val": "400",
                  "offset": 62
                }
              ],
              "location": "UpdateGameTest.getConceptWithoutOrEmptyTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2824576,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2616308,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2789566,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2721856,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2622889,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6378748,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2660415,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2662622,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2526061,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2654026,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13274459,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2635078,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2689695,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2583336,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2710996,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2610658,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2588998,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2656305,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2426958,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2693073,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2971205,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2549186,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2646786,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2608884,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12332556,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2641060,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2592446,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2830659,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2541860,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Update a concept when taxonomy id is not present.",
        "description": "",
        "id": "test-all-scenarios-of-update-game.;update-a-concept-when-taxonomy-id-is-not-present.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 176697,
              "status": "passed"
            },
            "line": 12,
            "name": "i give input taxonomy ID is absent and concept ID is G1",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 28
                },
                {
                  "val": "G1",
                  "offset": 53
                }
              ],
              "location": "UpdateGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3080076,
              "status": "passed"
            },
            "line": 13,
            "name": "i should get Error Message taxonomy Id is Required and status is 400",
            "match": {
              "arguments": [
                {
                  "val": "Required",
                  "offset": 42
                },
                {
                  "val": "400",
                  "offset": 65
                }
              ],
              "location": "UpdateGameTest.getConceptWithoutOrEmptyTaxonomy(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2815697,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2612704,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4810352,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2793842,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2515800,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4752177,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2888221,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5189388,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3684020,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13077036,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2551552,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2608888,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9147815,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2617951,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2493693,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2736468,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2780771,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2709056,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2900527,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2654444,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2495938,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2461504,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2611035,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2443728,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2536921,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2547420,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2576522,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2520603,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2612037,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 15,
        "name": "Update a concept when concept object is blank.",
        "description": "",
        "id": "test-all-scenarios-of-update-game.;update-a-concept-when-concept-object-is-blank.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 181749,
              "status": "passed"
            },
            "line": 16,
            "name": "i give input taxonomy ID is numeracy and concept ID is G1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 28
                },
                {
                  "val": "G1",
                  "offset": 55
                }
              ],
              "location": "UpdateGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 16215608,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.updat...\u003e but was:\u003cekstep.l[]earning-object.updat...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.UpdateGameTest.basicAssertion(UpdateGameTest.java:31)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.UpdateGameTest.gameObjectBlank(UpdateGameTest.java:121)\n\tat âœ½.Then i should get error message is Learning Object is blank(com/ilimi/taxonomy/controller/lob/cucumber/UpdateGameTest.feature:17)\n",
              "status": "failed"
            },
            "line": 17,
            "name": "i should get error message is Learning Object is blank",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 49
                }
              ],
              "location": "UpdateGameTest.gameObjectBlank(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2744160,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2964060,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2580105,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2566024,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2713309,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2642677,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2516892,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2552995,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2520776,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11026989,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3125753,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2579894,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2801421,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2650903,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2705926,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2632942,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2525881,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2500729,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2441822,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2569911,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2457022,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2388641,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2480964,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2615834,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2562294,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2484072,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2406327,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2402557,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2623032,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 19,
        "name": "Update a Game when object type is empty.",
        "description": "",
        "id": "test-all-scenarios-of-update-game.;update-a-game-when-object-type-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 172900,
              "status": "passed"
            },
            "line": 20,
            "name": "i give input taxonomy ID is numeracy and concept ID is G1",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 28
                },
                {
                  "val": "G1",
                  "offset": 55
                }
              ],
              "location": "UpdateGameTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18700735,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.l[p.l]earning-object.updat...\u003e but was:\u003cekstep.l[]earning-object.updat...\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.UpdateGameTest.basicAssertion(UpdateGameTest.java:31)\n\tat com.ilimi.taxonomy.controller.lob.cucumber.UpdateGameTest.emptyObjectType(UpdateGameTest.java:161)\n\tat âœ½.Then i should get error message object type not set for node G1(com/ilimi/taxonomy/controller/lob/cucumber/UpdateGameTest.feature:21)\n",
              "status": "failed"
            },
            "line": 21,
            "name": "i should get error message object type not set for node G1",
            "match": {
              "arguments": [
                {
                  "val": "G1",
                  "offset": 56
                }
              ],
              "location": "UpdateGameTest.emptyObjectType(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of update Game.",
    "description": "",
    "id": "test-all-scenarios-of-update-game.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/lob/cucumber/UpdateGameTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2589812,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2647344,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14496748,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12883558,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2576405,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5602992,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6043521,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2614636,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2565964,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8113616,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2592799,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2605656,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2585872,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2530404,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3100665,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2504255,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2547962,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2536172,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3635586,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2258763,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2415304,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8784803,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2527553,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2434439,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2593319,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2692245,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2541388,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2498627,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2597745,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Create a Questionnaire.",
        "description": "",
        "id": "test-all-scenarios-of-create-questionnaire.;create-a-questionnaire.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 26427126,
              "status": "passed"
            },
            "line": 4,
            "name": "Creating a Questionnaire Taxonomy id is numeracy with proper Questionnaire data",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "proper Questionnaire data",
                  "offset": 54
                }
              ],
              "location": "CreateQuestionnaireTest.createquestionnaire(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 405656,
              "error_message": "java.lang.AssertionError: expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\n\tat org.junit.Assert.assertEquals(Assert.java:118)\n\tat org.junit.Assert.assertEquals(Assert.java:555)\n\tat org.junit.Assert.assertEquals(Assert.java:542)\n\tat com.ilimi.taxonomy.base.test.BaseCucumberTest.assertStatus(BaseCucumberTest.java:136)\n\tat com.ilimi.assessment.controller.questionnaire.CreateQuestionnaireTest.assertResultAction(CreateQuestionnaireTest.java:98)\n\tat âœ½.Then return status of create Questionnaire is successful and response code is 200(com/ilimi/taxonomy/controller/questionnaire/cucumber/CreateQuestionnaireTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "return status of create Questionnaire is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 41
                },
                {
                  "val": "200",
                  "offset": 73
                }
              ],
              "location": "CreateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2985463,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2370647,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2661507,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2811173,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2582821,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2536383,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2265253,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2375122,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2610823,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2593398,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2755528,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2729880,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2885528,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2575886,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12458694,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2836671,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2553510,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2607840,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2587526,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2740804,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 10441182,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2803575,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2450882,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2618949,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4645736,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2709554,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2565858,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5508191,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2440693,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Create a Questionnaire with taxonomy is empty.",
        "description": "",
        "id": "test-all-scenarios-of-create-questionnaire.;create-a-questionnaire-with-taxonomy-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3251495,
              "status": "passed"
            },
            "line": 8,
            "name": "Creating a Questionnaire Taxonomy id is empty with proper Questionnaire data",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 40
                },
                {
                  "val": "proper Questionnaire data",
                  "offset": 51
                }
              ],
              "location": "CreateQuestionnaireTest.createquestionnaire(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3715990,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]questionnaire.create\u003e but was:\u003cekstep.[]questionnaire.create\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.assessment.controller.questionnaire.CreateQuestionnaireTest.basicAssertion(CreateQuestionnaireTest.java:34)\n\tat com.ilimi.assessment.controller.questionnaire.CreateQuestionnaireTest.assertResultAction(CreateQuestionnaireTest.java:101)\n\tat âœ½.Then return status of create Questionnaire is failed and response code is 400(com/ilimi/taxonomy/controller/questionnaire/cucumber/CreateQuestionnaireTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "return status of create Questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "CreateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "return error message by create Questionnaire API is Taxonomy Id is blank",
            "match": {
              "arguments": [
                {
                  "val": "Taxonomy Id is blank",
                  "offset": 52
                }
              ],
              "location": "CreateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2569004,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2364285,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2398112,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2533678,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2574394,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2766517,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2580681,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8014343,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13565274,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2554031,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2494935,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2534876,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7815916,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2596540,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2726670,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2477766,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2740348,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2475216,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2714884,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2647374,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12752741,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2572593,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2533720,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2585887,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2516671,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2588685,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2415315,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2507935,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2479247,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 12,
        "name": "Create a Questionnaire with taxonomy is absent.",
        "description": "",
        "id": "test-all-scenarios-of-create-questionnaire.;create-a-questionnaire-with-taxonomy-is-absent.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1265398,
              "status": "passed"
            },
            "line": 13,
            "name": "Creating a Questionnaire Taxonomy id is absent with proper Questionnaire data",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 40
                },
                {
                  "val": "proper Questionnaire data",
                  "offset": 52
                }
              ],
              "location": "CreateQuestionnaireTest.createquestionnaire(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 488543,
              "status": "passed"
            },
            "line": 14,
            "name": "return status of create Questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "CreateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 98749,
              "status": "passed"
            },
            "line": 15,
            "name": "return error message by create Questionnaire API is Required String parameter \u0027taxonomyId\u0027 is not present",
            "match": {
              "arguments": [
                {
                  "val": "Required String parameter \u0027taxonomyId\u0027 is not present",
                  "offset": 52
                }
              ],
              "location": "CreateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2636238,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2532104,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2548960,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2496717,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2247211,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2185568,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2267845,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2531644,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2610473,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8017651,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3326362,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2656648,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2645652,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2689680,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4351524,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2545999,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2470744,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2539012,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6062646,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2547834,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2611558,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8338631,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2631503,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2530190,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2722029,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2585819,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2441099,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2212842,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9086102,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 17,
        "name": "Create a Questionnaire with insufficient assessment items.",
        "description": "",
        "id": "test-all-scenarios-of-create-questionnaire.;create-a-questionnaire-with-insufficient-assessment-items.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9593071,
              "status": "passed"
            },
            "line": 18,
            "name": "Creating a Questionnaire Taxonomy id is numeracy with insufficient assessment items",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "insufficient assessment items",
                  "offset": 54
                }
              ],
              "location": "CreateQuestionnaireTest.createquestionnaire(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1906266,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]questionnaire.create\u003e but was:\u003cekstep.[]questionnaire.create\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.assessment.controller.questionnaire.CreateQuestionnaireTest.basicAssertion(CreateQuestionnaireTest.java:34)\n\tat com.ilimi.assessment.controller.questionnaire.CreateQuestionnaireTest.assertResultAction(CreateQuestionnaireTest.java:101)\n\tat âœ½.Then return status of create Questionnaire is failed and response code is 400(com/ilimi/taxonomy/controller/questionnaire/cucumber/CreateQuestionnaireTest.feature:19)\n",
              "status": "failed"
            },
            "line": 19,
            "name": "return status of create Questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "CreateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "return error message by create Questionnaire API is questionnaire has insufficient assessment items.",
            "match": {
              "arguments": [
                {
                  "val": "questionnaire has insufficient assessment items.",
                  "offset": 52
                }
              ],
              "location": "CreateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "Creating a Questionnaire Taxonomy id is numeracy with wrong member id",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "wrong member id",
                  "offset": 54
                }
              ],
              "location": "CreateQuestionnaireTest.createquestionnaire(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "return status of create Questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "CreateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "return error message by create Questionnaire API is Member Ids are invalid",
            "match": {
              "arguments": [
                {
                  "val": "Member Ids are invalid",
                  "offset": 52
                }
              ],
              "location": "CreateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2697967,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2544843,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2513842,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2615886,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 38314855,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2698810,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2560452,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2464631,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2747942,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2540737,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2473905,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2556189,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2507498,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2641166,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2588015,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2522030,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2444290,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2628735,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2545841,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2442941,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2406071,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2650862,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2739944,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2524348,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2402093,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2569094,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2735380,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2502884,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2374301,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 26,
        "name": "Create a Questionnaire when Content data is not in correct format or missing.",
        "description": "",
        "id": "test-all-scenarios-of-create-questionnaire.;create-a-questionnaire-when-content-data-is-not-in-correct-format-or-missing.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3312372,
              "status": "passed"
            },
            "line": 27,
            "name": "Creating a Questionnaire Taxonomy id is numeracy with questionnaire as blank",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "questionnaire as blank",
                  "offset": 54
                }
              ],
              "location": "CreateQuestionnaireTest.createquestionnaire(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1774511,
              "error_message": "org.junit.ComparisonFailure: expected:\u003cekstep.[lp.]questionnaire.create\u003e but was:\u003cekstep.[]questionnaire.create\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.ilimi.assessment.controller.questionnaire.CreateQuestionnaireTest.basicAssertion(CreateQuestionnaireTest.java:34)\n\tat com.ilimi.assessment.controller.questionnaire.CreateQuestionnaireTest.assertResultAction(CreateQuestionnaireTest.java:101)\n\tat âœ½.Then return status of create Questionnaire is failed and response code is 400(com/ilimi/taxonomy/controller/questionnaire/cucumber/CreateQuestionnaireTest.feature:28)\n",
              "status": "failed"
            },
            "line": 28,
            "name": "return status of create Questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "CreateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "return error message by create Questionnaire API is Questionnaire Object is blank",
            "match": {
              "arguments": [
                {
                  "val": "Questionnaire Object is blank",
                  "offset": 52
                }
              ],
              "location": "CreateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "Creating a Questionnaire Taxonomy id is numeracy with empty object type",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "empty object type",
                  "offset": 54
                }
              ],
              "location": "CreateQuestionnaireTest.createquestionnaire(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "return status of create Questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "CreateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "return error message by create Questionnaire API is Object type not set for node: null",
            "match": {
              "arguments": [
                {
                  "val": "Object type not set for node: null",
                  "offset": 52
                }
              ],
              "location": "CreateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "Creating a Questionnaire Taxonomy id is numeracy with wrong definition node",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "wrong definition node",
                  "offset": 54
                }
              ],
              "location": "CreateQuestionnaireTest.createquestionnaire(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "return status of create Questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "CreateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "return error message by create Questionnaire API is Definition node not found for Object Type: ilimi",
            "match": {
              "arguments": [
                {
                  "val": "Definition node not found for Object Type: ilimi",
                  "offset": 52
                }
              ],
              "location": "CreateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "Creating a Questionnaire Taxonomy id is numeracy with require metadata",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "require metadata",
                  "offset": 54
                }
              ],
              "location": "CreateQuestionnaireTest.createquestionnaire(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "return status of create Questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "CreateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "return error message by create Questionnaire API is Required Metadata code not set",
            "match": {
              "arguments": [
                {
                  "val": "Required Metadata code not set",
                  "offset": 52
                }
              ],
              "location": "CreateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "Creating a Questionnaire Taxonomy id is numeracy with unsupported relation",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "unsupported relation",
                  "offset": 54
                }
              ],
              "location": "CreateQuestionnaireTest.createquestionnaire(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "return status of create Questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "CreateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "return error message by create Questionnaire API is Relation ilimi is not supported",
            "match": {
              "arguments": [
                {
                  "val": "Relation ilimi is not supported",
                  "offset": 52
                }
              ],
              "location": "CreateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Test all scenarios of create Questionnaire.",
    "description": "",
    "id": "test-all-scenarios-of-create-questionnaire.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/questionnaire/cucumber/CreateQuestionnaireTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2861249,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2523070,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5773473,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2623665,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2488411,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 28334386,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2604736,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2572439,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2638590,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2465840,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2470081,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2562457,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2500319,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2529790,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2591431,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2519858,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2784402,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2496050,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2494581,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2485578,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2434330,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2727586,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2420486,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2494842,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2540609,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2584056,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2486946,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2508346,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2622290,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Delete a questionnaire using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-questionnaire.;delete-a-questionnaire-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12855434,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.DeleteQuestionnaireTest.createQuestionnaire(DeleteQuestionnaireTest.java:50)\n\tat com.ilimi.assessment.controller.questionnaire.DeleteQuestionnaireTest.getInputData(DeleteQuestionnaireTest.java:71)\n\tat âœ½.When Deleting a questionnaire Taxonomy id is numeracy and questionnaire id is numeracy_464(com/ilimi/taxonomy/controller/questionnaire/cucumber/DeleteQuestionnaireTest.feature:4)\n",
              "status": "failed"
            },
            "line": 4,
            "name": "Deleting a questionnaire Taxonomy id is numeracy and questionnaire id is numeracy_464",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "numeracy_464",
                  "offset": 73
                }
              ],
              "location": "DeleteQuestionnaireTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 5,
            "name": "return status of delete questionnaire is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 41
                },
                {
                  "val": "200",
                  "offset": 73
                }
              ],
              "location": "DeleteQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2690308,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2808277,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4176118,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2484644,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2505012,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2466721,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2516776,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2503987,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2422287,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2601387,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2425339,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2480561,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2560422,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2497165,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2462322,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4243550,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2468782,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2478202,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5194989,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2426371,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2421538,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2701922,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2589846,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2492265,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2508463,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2590716,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2480659,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2485450,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2452543,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Delete a questionnaire with taxonomy is empty.",
        "description": "",
        "id": "test-all-scenarios-of-delete-questionnaire.;delete-a-questionnaire-with-taxonomy-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10627081,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.DeleteQuestionnaireTest.createQuestionnaire(DeleteQuestionnaireTest.java:50)\n\tat com.ilimi.assessment.controller.questionnaire.DeleteQuestionnaireTest.getInputData(DeleteQuestionnaireTest.java:71)\n\tat âœ½.When Deleting a questionnaire Taxonomy id is empty and questionnaire id is numeracy_464(com/ilimi/taxonomy/controller/questionnaire/cucumber/DeleteQuestionnaireTest.feature:8)\n",
              "status": "failed"
            },
            "line": 8,
            "name": "Deleting a questionnaire Taxonomy id is empty and questionnaire id is numeracy_464",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 40
                },
                {
                  "val": "numeracy_464",
                  "offset": 70
                }
              ],
              "location": "DeleteQuestionnaireTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "return status of delete questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "DeleteQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "return error message by delete questionnaire API is Taxonomy Id is blank",
            "match": {
              "arguments": [
                {
                  "val": "Taxonomy Id is blank",
                  "offset": 52
                }
              ],
              "location": "DeleteQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2546840,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2420223,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2584384,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2654697,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2438014,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5402183,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3274130,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2696381,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12908887,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2533105,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2455948,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2545126,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11320150,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2418727,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4291871,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2990740,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2592083,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3494271,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2816341,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2688071,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6310639,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3039876,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2861265,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5706426,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2734117,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2482780,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2413499,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2459014,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2653092,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 12,
        "name": "Delete a questionnaire with taxonomy is absent.",
        "description": "",
        "id": "test-all-scenarios-of-delete-questionnaire.;delete-a-questionnaire-with-taxonomy-is-absent.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10803111,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.DeleteQuestionnaireTest.createQuestionnaire(DeleteQuestionnaireTest.java:50)\n\tat com.ilimi.assessment.controller.questionnaire.DeleteQuestionnaireTest.getInputData(DeleteQuestionnaireTest.java:71)\n\tat âœ½.When Deleting a questionnaire Taxonomy id is absent and questionnaire id is numeracy_464(com/ilimi/taxonomy/controller/questionnaire/cucumber/DeleteQuestionnaireTest.feature:13)\n",
              "status": "failed"
            },
            "line": 13,
            "name": "Deleting a questionnaire Taxonomy id is absent and questionnaire id is numeracy_464",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 40
                },
                {
                  "val": "numeracy_464",
                  "offset": 71
                }
              ],
              "location": "DeleteQuestionnaireTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "return status of delete questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "DeleteQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "return error message by delete questionnaire API is Required String parameter \u0027taxonomyId\u0027 is not present",
            "match": {
              "arguments": [
                {
                  "val": "Required String parameter \u0027taxonomyId\u0027 is not present",
                  "offset": 52
                }
              ],
              "location": "DeleteQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2664234,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13090955,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2656584,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13009813,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2588339,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2555819,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2534115,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6459807,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2608499,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2555051,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2617826,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2533463,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2512015,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2475340,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12400526,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2910272,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2960967,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2775108,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2508545,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2572985,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2549446,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2503942,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2527240,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2498845,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2479623,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2538605,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2607753,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2632355,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2531583,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 17,
        "name": "Delete a questionnaire using wrong identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-questionnaire.;delete-a-questionnaire-using-wrong-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9704669,
              "status": "passed"
            },
            "line": 18,
            "name": "Deleting a questionnaire Taxonomy id is numeracy and questionnaire id is ilimi",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "ilimi",
                  "offset": 73
                }
              ],
              "location": "DeleteQuestionnaireTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 361150,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\n\tat org.junit.Assert.assertEquals(Assert.java:118)\n\tat org.junit.Assert.assertEquals(Assert.java:555)\n\tat org.junit.Assert.assertEquals(Assert.java:542)\n\tat com.ilimi.taxonomy.base.test.BaseCucumberTest.assertStatus(BaseCucumberTest.java:136)\n\tat com.ilimi.assessment.controller.questionnaire.DeleteQuestionnaireTest.assertResultAction(DeleteQuestionnaireTest.java:92)\n\tat âœ½.Then return status of delete questionnaire is failed and response code is 404(com/ilimi/taxonomy/controller/questionnaire/cucumber/DeleteQuestionnaireTest.feature:19)\n",
              "status": "failed"
            },
            "line": 19,
            "name": "return status of delete questionnaire is failed and response code is 404",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "404",
                  "offset": 69
                }
              ],
              "location": "DeleteQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "return error message by delete questionnaire API is Node not found: ilimi",
            "match": {
              "arguments": [
                {
                  "val": "Node not found: ilimi",
                  "offset": 52
                }
              ],
              "location": "DeleteQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of delete questionnaire.",
    "description": "",
    "id": "test-all-scenarios-of-delete-questionnaire.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/questionnaire/cucumber/DeleteQuestionnaireTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2806950,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2632747,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2589601,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2576759,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2662313,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4021480,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13376970,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2567407,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2631922,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12462265,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2595338,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2525914,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2492709,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2595929,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2549273,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2547247,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2683378,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2638567,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2609595,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2741595,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2570571,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2592042,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2758919,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3593344,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2571437,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2957030,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2816183,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2729085,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2678425,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Deliver a questionnaire using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-deliver-questionnaire.;deliver-a-questionnaire-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13218197,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.DeliverQuestionnaire.createquestionnaire(DeliverQuestionnaire.java:54)\n\tat com.ilimi.assessment.controller.questionnaire.DeliverQuestionnaire.getInput(DeliverQuestionnaire.java:70)\n\tat âœ½.When Delivering a questionnaire Taxonomy id is numeracy and questionnaire id is numeracy_464(com/ilimi/taxonomy/controller/questionnaire/cucumber/DeliverQuestionnaireTest.feature:4)\n",
              "status": "failed"
            },
            "line": 4,
            "name": "Delivering a questionnaire Taxonomy id is numeracy and questionnaire id is numeracy_464",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 42
                },
                {
                  "val": "numeracy_464",
                  "offset": 75
                }
              ],
              "location": "DeliverQuestionnaire.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 5,
            "name": "return status of deliver questionnaire is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 42
                },
                {
                  "val": "200",
                  "offset": 74
                }
              ],
              "location": "DeliverQuestionnaire.assertResultAction(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2652132,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2497937,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2798961,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2602073,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2539878,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2638623,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2601252,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2717438,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2815165,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2592705,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2548949,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2616975,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2622716,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2715366,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2869484,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2602103,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2600570,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2799763,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2563493,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2997612,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2666845,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2694999,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2516403,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2475224,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2445378,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2626204,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2586125,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2569908,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2574428,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Deliver a questionnaire with taxonomy is empty.",
        "description": "",
        "id": "test-all-scenarios-of-deliver-questionnaire.;deliver-a-questionnaire-with-taxonomy-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10730768,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.DeliverQuestionnaire.createquestionnaire(DeliverQuestionnaire.java:54)\n\tat com.ilimi.assessment.controller.questionnaire.DeliverQuestionnaire.getInput(DeliverQuestionnaire.java:70)\n\tat âœ½.When Delivering a questionnaire Taxonomy id is empty and questionnaire id is numeracy_464(com/ilimi/taxonomy/controller/questionnaire/cucumber/DeliverQuestionnaireTest.feature:8)\n",
              "status": "failed"
            },
            "line": 8,
            "name": "Delivering a questionnaire Taxonomy id is empty and questionnaire id is numeracy_464",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 42
                },
                {
                  "val": "numeracy_464",
                  "offset": 72
                }
              ],
              "location": "DeliverQuestionnaire.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "return status of deliver questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 42
                },
                {
                  "val": "400",
                  "offset": 70
                }
              ],
              "location": "DeliverQuestionnaire.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "return error message by deliver questionnaire API is Taxonomy Id is blank",
            "match": {
              "arguments": [
                {
                  "val": "Taxonomy Id is blank",
                  "offset": 53
                }
              ],
              "location": "DeliverQuestionnaire.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2650794,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2519164,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2564389,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2689559,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2419390,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2366715,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5771209,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3303885,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2664487,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 23792895,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2474380,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2446230,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2478346,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2401291,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2444678,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2978445,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2670672,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2614714,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2513744,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2472824,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2446840,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2431509,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2630027,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2688252,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2585969,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2599251,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2638966,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2981598,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2712929,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 12,
        "name": "Deliver a questionnaire with taxonomy is absent.",
        "description": "",
        "id": "test-all-scenarios-of-deliver-questionnaire.;deliver-a-questionnaire-with-taxonomy-is-absent.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10195513,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.DeliverQuestionnaire.createquestionnaire(DeliverQuestionnaire.java:54)\n\tat com.ilimi.assessment.controller.questionnaire.DeliverQuestionnaire.getInput(DeliverQuestionnaire.java:70)\n\tat âœ½.When Delivering a questionnaire Taxonomy id is absent and questionnaire id is numeracy_464(com/ilimi/taxonomy/controller/questionnaire/cucumber/DeliverQuestionnaireTest.feature:13)\n",
              "status": "failed"
            },
            "line": 13,
            "name": "Delivering a questionnaire Taxonomy id is absent and questionnaire id is numeracy_464",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 42
                },
                {
                  "val": "numeracy_464",
                  "offset": 73
                }
              ],
              "location": "DeliverQuestionnaire.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "return status of deliver questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 42
                },
                {
                  "val": "400",
                  "offset": 70
                }
              ],
              "location": "DeliverQuestionnaire.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "return error message by deliver questionnaire API is Required String parameter \u0027taxonomyId\u0027 is not present",
            "match": {
              "arguments": [
                {
                  "val": "Required String parameter \u0027taxonomyId\u0027 is not present",
                  "offset": 53
                }
              ],
              "location": "DeliverQuestionnaire.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2577396,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2448621,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2660588,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2411803,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2645698,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2658746,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7296737,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3339764,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2681864,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2566838,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2688463,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2613295,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2499795,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2481657,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2579732,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5169454,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2657778,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2509777,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2499587,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2445898,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2523293,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2746028,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2665955,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2710059,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2730366,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2699587,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2590411,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2521767,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2457865,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 17,
        "name": "Deliver a questionnaire using wrong identifier.",
        "description": "",
        "id": "test-all-scenarios-of-deliver-questionnaire.;deliver-a-questionnaire-using-wrong-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8097034,
              "status": "passed"
            },
            "line": 18,
            "name": "Delivering a questionnaire Taxonomy id is numeracy and questionnaire id is ilimi",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 42
                },
                {
                  "val": "ilimi",
                  "offset": 75
                }
              ],
              "location": "DeliverQuestionnaire.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 375351,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\n\tat org.junit.Assert.assertEquals(Assert.java:118)\n\tat org.junit.Assert.assertEquals(Assert.java:555)\n\tat org.junit.Assert.assertEquals(Assert.java:542)\n\tat com.ilimi.taxonomy.base.test.BaseCucumberTest.assertStatus(BaseCucumberTest.java:136)\n\tat com.ilimi.assessment.controller.questionnaire.DeliverQuestionnaire.assertResultAction(DeliverQuestionnaire.java:90)\n\tat âœ½.Then return status of deliver questionnaire is failed and response code is 404(com/ilimi/taxonomy/controller/questionnaire/cucumber/DeliverQuestionnaireTest.feature:19)\n",
              "status": "failed"
            },
            "line": 19,
            "name": "return status of deliver questionnaire is failed and response code is 404",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 42
                },
                {
                  "val": "404",
                  "offset": 70
                }
              ],
              "location": "DeliverQuestionnaire.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "return error message by deliver questionnaire API is Node not found: ilimi",
            "match": {
              "arguments": [
                {
                  "val": "Node not found: ilimi",
                  "offset": 53
                }
              ],
              "location": "DeliverQuestionnaire.assertErrorMessage(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of Deliver questionnaire.",
    "description": "",
    "id": "test-all-scenarios-of-deliver-questionnaire.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/questionnaire/cucumber/DeliverQuestionnaireTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2611219,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2434978,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2401875,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2425613,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2485800,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2722406,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4057353,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3289228,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2525014,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2841715,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2833089,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2504597,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2552727,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13871224,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8569256,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2928718,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 8042005,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2646846,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2603708,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2557402,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2475272,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2212156,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2409025,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2503957,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2507140,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2593545,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2515593,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2503249,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2954288,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get a questionnaire using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-questionnaire.;get-a-questionnaire-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12768168,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.GetQuestionnaireTest.createquestionnaire(GetQuestionnaireTest.java:54)\n\tat com.ilimi.assessment.controller.questionnaire.GetQuestionnaireTest.getInput(GetQuestionnaireTest.java:71)\n\tat âœ½.When Getting a questionnaire Taxonomy id is numeracy and questionnaire id is numeracy_464(com/ilimi/taxonomy/controller/questionnaire/cucumber/GetQuestionnaireTest.feature:4)\n",
              "status": "failed"
            },
            "line": 4,
            "name": "Getting a questionnaire Taxonomy id is numeracy and questionnaire id is numeracy_464",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 39
                },
                {
                  "val": "numeracy_464",
                  "offset": 72
                }
              ],
              "location": "GetQuestionnaireTest.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 5,
            "name": "return status of get questionnaire is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 38
                },
                {
                  "val": "200",
                  "offset": 70
                }
              ],
              "location": "GetQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2615318,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2928854,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2739282,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3905524,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2557473,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2299468,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2402247,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2598257,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2455199,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2416362,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2471999,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2478576,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2429829,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2408289,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2741980,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2400048,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2460959,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2482000,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2446723,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2764241,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3046144,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2747287,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2312136,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2472097,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7503946,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2543506,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4293480,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2633463,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2558468,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Get a questionnaire with taxonomy is empty.",
        "description": "",
        "id": "test-all-scenarios-of-get-questionnaire.;get-a-questionnaire-with-taxonomy-is-empty.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10561530,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.GetQuestionnaireTest.createquestionnaire(GetQuestionnaireTest.java:54)\n\tat com.ilimi.assessment.controller.questionnaire.GetQuestionnaireTest.getInput(GetQuestionnaireTest.java:71)\n\tat âœ½.When Getting a questionnaire Taxonomy id is empty and questionnaire id is numeracy_464(com/ilimi/taxonomy/controller/questionnaire/cucumber/GetQuestionnaireTest.feature:8)\n",
              "status": "failed"
            },
            "line": 8,
            "name": "Getting a questionnaire Taxonomy id is empty and questionnaire id is numeracy_464",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 39
                },
                {
                  "val": "numeracy_464",
                  "offset": 69
                }
              ],
              "location": "GetQuestionnaireTest.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "return status of get questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 38
                },
                {
                  "val": "400",
                  "offset": 66
                }
              ],
              "location": "GetQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "return error message by get questionnaire API is Taxonomy Id is blank",
            "match": {
              "arguments": [
                {
                  "val": "Taxonomy Id is blank",
                  "offset": 49
                }
              ],
              "location": "GetQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2707689,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2558491,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2479669,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2450384,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2445168,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2441475,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 15216102,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2644692,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2500352,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2458827,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14159420,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2550934,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2470903,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2471223,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2500563,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2736265,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2459139,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2488486,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2400978,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2538710,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2364952,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2424644,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2381545,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7953019,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2447876,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2420468,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2882627,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3607361,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2429169,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 12,
        "name": "Get a questionnaire with taxonomy is absent.",
        "description": "",
        "id": "test-all-scenarios-of-get-questionnaire.;get-a-questionnaire-with-taxonomy-is-absent.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10732004,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.GetQuestionnaireTest.createquestionnaire(GetQuestionnaireTest.java:54)\n\tat com.ilimi.assessment.controller.questionnaire.GetQuestionnaireTest.getInput(GetQuestionnaireTest.java:71)\n\tat âœ½.When Getting a questionnaire Taxonomy id is absent and questionnaire id is numeracy_464(com/ilimi/taxonomy/controller/questionnaire/cucumber/GetQuestionnaireTest.feature:13)\n",
              "status": "failed"
            },
            "line": 13,
            "name": "Getting a questionnaire Taxonomy id is absent and questionnaire id is numeracy_464",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 39
                },
                {
                  "val": "numeracy_464",
                  "offset": 70
                }
              ],
              "location": "GetQuestionnaireTest.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "return status of get questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 38
                },
                {
                  "val": "400",
                  "offset": 66
                }
              ],
              "location": "GetQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "return error message by get questionnaire API is Required String parameter \u0027taxonomyId\u0027 is not present",
            "match": {
              "arguments": [
                {
                  "val": "Required String parameter \u0027taxonomyId\u0027 is not present",
                  "offset": 49
                }
              ],
              "location": "GetQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2630050,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2561308,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3473187,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 19757838,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2500002,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2550143,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2551270,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2501867,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12818285,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3012268,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2575652,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2519857,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2602548,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2545864,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2481616,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2464992,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2475155,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2496812,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2487903,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2456355,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2482068,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2419402,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2376486,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2597127,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2439882,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2442964,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2555206,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2494438,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2456091,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 17,
        "name": "Get a questionnaire using wrong identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-questionnaire.;get-a-questionnaire-using-wrong-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8383277,
              "status": "passed"
            },
            "line": 18,
            "name": "Getting a questionnaire Taxonomy id is numeracy and questionnaire id is ilimi",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 39
                },
                {
                  "val": "ilimi",
                  "offset": 72
                }
              ],
              "location": "GetQuestionnaireTest.getInput(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 365211,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\n\tat org.junit.Assert.assertEquals(Assert.java:118)\n\tat org.junit.Assert.assertEquals(Assert.java:555)\n\tat org.junit.Assert.assertEquals(Assert.java:542)\n\tat com.ilimi.taxonomy.base.test.BaseCucumberTest.assertStatus(BaseCucumberTest.java:136)\n\tat com.ilimi.assessment.controller.questionnaire.GetQuestionnaireTest.assertResultAction(GetQuestionnaireTest.java:91)\n\tat âœ½.Then return status of get questionnaire is failed and response code is 404(com/ilimi/taxonomy/controller/questionnaire/cucumber/GetQuestionnaireTest.feature:19)\n",
              "status": "failed"
            },
            "line": 19,
            "name": "return status of get questionnaire is failed and response code is 404",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 38
                },
                {
                  "val": "404",
                  "offset": 66
                }
              ],
              "location": "GetQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "return error message by get questionnaire API is Node not found: ilimi",
            "match": {
              "arguments": [
                {
                  "val": "Node not found: ilimi",
                  "offset": 49
                }
              ],
              "location": "GetQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get questionnaire.",
    "description": "",
    "id": "test-all-scenarios-of-get-questionnaire.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/questionnaire/cucumber/GetQuestionnaireTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2690535,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2571264,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2558603,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2512063,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2409073,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2333393,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 24028136,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2559978,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2516241,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5368639,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2951500,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2446957,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2552068,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2757461,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2423048,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2343970,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4122820,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2506530,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2513178,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6239445,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2338003,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2360386,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2449775,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2385451,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11963907,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6165673,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2727849,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3693648,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2645968,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Update a questionnaire.",
        "description": "",
        "id": "test-all-scenarios-of-update-questionnaire.;update-a-questionnaire.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19163360,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.UpdateQuestionnaireTest.createQuestionnaire(UpdateQuestionnaireTest.java:50)\n\tat com.ilimi.assessment.controller.questionnaire.UpdateQuestionnaireTest.getInputData(UpdateQuestionnaireTest.java:77)\n\tat âœ½.When Updating a questionnaire Taxonomy id is numeracy and questionnaire id is Q1 with proper questionnaire data(com/ilimi/taxonomy/controller/questionnaire/cucumber/UpdateQuestionnaireTest.feature:4)\n",
              "status": "failed"
            },
            "line": 4,
            "name": "Updating a questionnaire Taxonomy id is numeracy and questionnaire id is Q1 with proper questionnaire data",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "Q1",
                  "offset": 73
                },
                {
                  "val": "proper questionnaire data",
                  "offset": 81
                }
              ],
              "location": "UpdateQuestionnaireTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 5,
            "name": "return status of update questionnaire is successful and response code is 200",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 41
                },
                {
                  "val": "200",
                  "offset": 73
                }
              ],
              "location": "UpdateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2892718,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6149695,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3460980,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6411979,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5586112,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2714112,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2577317,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2675558,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2438812,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2469946,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2586327,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5152013,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2666867,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2788116,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6155828,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3112889,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3188050,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2976655,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2855457,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3040421,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3161395,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3008245,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2946754,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3096996,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2994643,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2824820,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2481040,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2432092,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2638371,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Update a questionnaire when taxonomy is wrong.",
        "description": "",
        "id": "test-all-scenarios-of-update-questionnaire.;update-a-questionnaire-when-taxonomy-is-wrong.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11658266,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.UpdateQuestionnaireTest.createQuestionnaire(UpdateQuestionnaireTest.java:50)\n\tat com.ilimi.assessment.controller.questionnaire.UpdateQuestionnaireTest.getInputData(UpdateQuestionnaireTest.java:77)\n\tat âœ½.When Updating a questionnaire Taxonomy id is empty and questionnaire id is Q1 with proper questionnaire data(com/ilimi/taxonomy/controller/questionnaire/cucumber/UpdateQuestionnaireTest.feature:8)\n",
              "status": "failed"
            },
            "line": 8,
            "name": "Updating a questionnaire Taxonomy id is empty and questionnaire id is Q1 with proper questionnaire data",
            "match": {
              "arguments": [
                {
                  "val": "empty",
                  "offset": 40
                },
                {
                  "val": "Q1",
                  "offset": 70
                },
                {
                  "val": "proper questionnaire data",
                  "offset": 78
                }
              ],
              "location": "UpdateQuestionnaireTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "return status of update questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "UpdateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "return error message by update questionnaire API is Taxonomy id is blank",
            "match": {
              "arguments": [
                {
                  "val": "Taxonomy id is blank",
                  "offset": 52
                }
              ],
              "location": "UpdateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "Updating a questionnaire Taxonomy id is absent and questionnaire id is Q1 with proper questionnaire data",
            "match": {
              "arguments": [
                {
                  "val": "absent",
                  "offset": 40
                },
                {
                  "val": "Q1",
                  "offset": 71
                },
                {
                  "val": "proper questionnaire data",
                  "offset": 79
                }
              ],
              "location": "UpdateQuestionnaireTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "return status of update questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "UpdateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "return error message by update questionnaire API is Required String parameter \u0027taxonomyid\u0027 is not present",
            "match": {
              "arguments": [
                {
                  "val": "Required String parameter \u0027taxonomyid\u0027 is not present",
                  "offset": 52
                }
              ],
              "location": "UpdateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2761525,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2673531,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2548530,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2526193,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2399309,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 14373759,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2537336,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2530713,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2584188,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3134116,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2542594,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2591635,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2410848,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2469867,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2691706,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2442305,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2505080,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2515458,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2546165,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2656479,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2723009,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2649657,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2630999,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2662532,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2904704,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2689590,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2765191,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2513540,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2477679,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 16,
        "name": "Update a questionnaire with wrong questionnaire id.",
        "description": "",
        "id": "test-all-scenarios-of-update-questionnaire.;update-a-questionnaire-with-wrong-questionnaire-id.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11810606,
              "status": "passed"
            },
            "line": 17,
            "name": "Updating a questionnaire Taxonomy id is numeracy and questionnaire id is ilimi with wrong questionnaire Id",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "ilimi",
                  "offset": 73
                },
                {
                  "val": "wrong questionnaire Id",
                  "offset": 84
                }
              ],
              "location": "UpdateQuestionnaireTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 373445,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c400\u003e\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\n\tat org.junit.Assert.assertEquals(Assert.java:118)\n\tat org.junit.Assert.assertEquals(Assert.java:555)\n\tat org.junit.Assert.assertEquals(Assert.java:542)\n\tat com.ilimi.taxonomy.base.test.BaseCucumberTest.assertStatus(BaseCucumberTest.java:136)\n\tat com.ilimi.assessment.controller.questionnaire.UpdateQuestionnaireTest.assertResultAction(UpdateQuestionnaireTest.java:109)\n\tat âœ½.Then return status of update questionnaire is failed and response code is 404(com/ilimi/taxonomy/controller/questionnaire/cucumber/UpdateQuestionnaireTest.feature:18)\n",
              "status": "failed"
            },
            "line": 18,
            "name": "return status of update questionnaire is failed and response code is 404",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "404",
                  "offset": 69
                }
              ],
              "location": "UpdateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "return error message by update questionnaire API is com.ilimi.common.exception.ResourceNotFoundException: node not found: ilimi",
            "match": {
              "arguments": [
                {
                  "val": "com.ilimi.common.exception.ResourceNotFoundException: node not found: ilimi",
                  "offset": 52
                }
              ],
              "location": "UpdateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3278308,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5730237,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12318887,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3279773,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3132869,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9248639,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11362727,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3539711,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3629705,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4551654,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4499057,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3186988,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 9098562,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3405218,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2972072,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 11363292,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3038700,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2825069,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2732235,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2698275,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2869032,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2720915,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2960632,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2855950,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2819611,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3121451,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3141409,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2997035,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2787344,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 21,
        "name": "Update a Questionnaire with insufficient assessment items.",
        "description": "",
        "id": "test-all-scenarios-of-update-questionnaire.;update-a-questionnaire-with-insufficient-assessment-items.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16733487,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.UpdateQuestionnaireTest.createQuestionnaire(UpdateQuestionnaireTest.java:50)\n\tat com.ilimi.assessment.controller.questionnaire.UpdateQuestionnaireTest.getInputData(UpdateQuestionnaireTest.java:77)\n\tat âœ½.When Updating a questionnaire Taxonomy id is numeracy and questionnaire id is Q1 with insufficient assessment items(com/ilimi/taxonomy/controller/questionnaire/cucumber/UpdateQuestionnaireTest.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "Updating a questionnaire Taxonomy id is numeracy and questionnaire id is Q1 with insufficient assessment items",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "Q1",
                  "offset": 73
                },
                {
                  "val": "insufficient assessment items",
                  "offset": 81
                }
              ],
              "location": "UpdateQuestionnaireTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "return status of update questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "UpdateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "return error message by update questionnaire API is questionnaire has insufficient assessment items.",
            "match": {
              "arguments": [
                {
                  "val": "questionnaire has insufficient assessment items.",
                  "offset": 52
                }
              ],
              "location": "UpdateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "Updating a questionnaire Taxonomy id is numeracy and questionnaire id is Q1 with wrong member id",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "Q1",
                  "offset": 73
                },
                {
                  "val": "wrong member id",
                  "offset": 81
                }
              ],
              "location": "UpdateQuestionnaireTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "return status of update questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "UpdateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "return error message by update questionnaire API is Member with identifier: Q109 does not exist.",
            "match": {
              "arguments": [
                {
                  "val": "Member with identifier: Q109 does not exist.",
                  "offset": 52
                }
              ],
              "location": "UpdateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4277432,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 38155625,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3217043,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3067864,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3015286,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4181520,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3097558,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3269681,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3039996,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3093776,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3266435,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3124574,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3187164,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3228789,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3095414,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3036124,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3371889,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3087877,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4647164,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3097147,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3123677,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3257052,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3529604,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2990073,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3267520,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3093516,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2995400,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3124465,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 65739075,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 30,
        "name": "Create a questionnaire when Content data is not in correct format or missing.",
        "description": "",
        "id": "test-all-scenarios-of-update-questionnaire.;create-a-questionnaire-when-content-data-is-not-in-correct-format-or-missing.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10005695,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c400\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.assessment.controller.questionnaire.UpdateQuestionnaireTest.createQuestionnaire(UpdateQuestionnaireTest.java:50)\n\tat com.ilimi.assessment.controller.questionnaire.UpdateQuestionnaireTest.getInputData(UpdateQuestionnaireTest.java:77)\n\tat âœ½.When Updating a questionnaire Taxonomy id is numeracy and questionnaire id is Q1 with questionnaire is blank(com/ilimi/taxonomy/controller/questionnaire/cucumber/UpdateQuestionnaireTest.feature:31)\n",
              "status": "failed"
            },
            "line": 31,
            "name": "Updating a questionnaire Taxonomy id is numeracy and questionnaire id is Q1 with questionnaire is blank",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "Q1",
                  "offset": 73
                },
                {
                  "val": "questionnaire is blank",
                  "offset": 81
                }
              ],
              "location": "UpdateQuestionnaireTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "return status of update questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "UpdateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "return error message by update questionnaire API is questionnaire Object is blank",
            "match": {
              "arguments": [
                {
                  "val": "questionnaire Object is blank",
                  "offset": 52
                }
              ],
              "location": "UpdateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "Updating a questionnaire Taxonomy id is numeracy and questionnaire id is Q1 with empty object type",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "Q1",
                  "offset": 73
                },
                {
                  "val": "empty object type",
                  "offset": 81
                }
              ],
              "location": "UpdateQuestionnaireTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "return status of update questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "UpdateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "return error message by update questionnaire API is Object type not set for node: null",
            "match": {
              "arguments": [
                {
                  "val": "Object type not set for node: null",
                  "offset": 52
                }
              ],
              "location": "UpdateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "Updating a questionnaire Taxonomy id is numeracy and questionnaire id is Q1 with wrong definition node",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 40
                },
                {
                  "val": "Q1",
                  "offset": 73
                },
                {
                  "val": "wrong definition node",
                  "offset": 81
                }
              ],
              "location": "UpdateQuestionnaireTest.getInputData(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "return status of update questionnaire is failed and response code is 400",
            "match": {
              "arguments": [
                {
                  "val": "failed",
                  "offset": 41
                },
                {
                  "val": "400",
                  "offset": 69
                }
              ],
              "location": "UpdateQuestionnaireTest.assertResultAction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "return error message by update questionnaire API is Definition node not found for Object Type: ilimi",
            "match": {
              "arguments": [
                {
                  "val": "Definition node not found for Object Type: ilimi",
                  "offset": 52
                }
              ],
              "location": "UpdateQuestionnaireTest.assertErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Test all scenarios of update questionnaire.",
    "description": "",
    "id": "test-all-scenarios-of-update-questionnaire.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/questionnaire/cucumber/UpdateQuestionnaireTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2801383,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2636683,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2575068,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2455432,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4262531,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2709934,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2543939,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12843493,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2630961,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2521571,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7990740,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2614290,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2481683,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2438745,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2601771,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2682948,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2540465,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2602228,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2469863,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2726708,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2820123,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2731794,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2745053,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2621322,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2599511,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2451846,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2590517,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2540809,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2540650,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Create definition using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-create-definition.;create-definition-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 149617,
              "status": "passed"
            },
            "line": 4,
            "name": "Taxonomy ID is numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 15
                }
              ],
              "location": "CreateDefinitionTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63858191,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.CreateDefinitionTest.createDefination(CreateDefinitionTest.java:45)\n\tat âœ½.Then Create definition and get status successful(com/ilimi/taxonomy/controller/taxonomy/cucumber/CreateDefinitionTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Create definition and get status successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 33
                }
              ],
              "location": "CreateDefinitionTest.createDefination(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of create definition.",
    "description": "",
    "id": "test-all-scenarios-of-create-definition.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/taxonomy/cucumber/CreateDefinitionTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2679411,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2749950,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2700337,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2670126,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2624426,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2780221,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2677539,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2578959,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 24753658,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2732027,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2639720,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2925727,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2605550,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2652953,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2645592,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2501248,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2528593,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2631944,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2594272,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2567553,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2682259,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2646168,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2536820,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2672868,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2647302,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2598265,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2547849,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2694211,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2781226,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Delete definition using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-delete-definition.;delete-definition-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 58133360,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.DeleteDefinitionTest.createDef(DeleteDefinitionTest.java:38)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.DeleteDefinitionTest.getInputData(DeleteDefinitionTest.java:56)\n\tat âœ½.When Taxonomy id is numeracy and objectType ID is Game(com/ilimi/taxonomy/controller/taxonomy/cucumber/DeleteDefinitionTest.feature:4)\n",
              "status": "failed"
            },
            "line": 4,
            "name": "Taxonomy id is numeracy and objectType ID is Game",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 15
                },
                {
                  "val": "Game",
                  "offset": 45
                }
              ],
              "location": "DeleteDefinitionTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 5,
            "name": "Delete the Game definition and get status succussfull",
            "match": {
              "arguments": [
                {
                  "val": "Game",
                  "offset": 11
                },
                {
                  "val": "succussfull",
                  "offset": 42
                }
              ],
              "location": "DeleteDefinitionTest.deleteDefination(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2631097,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2481330,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2612963,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2556773,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2562073,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2526050,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3681538,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2623552,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2524954,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 16774956,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2494616,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2607087,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2576903,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2581389,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2604348,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2553304,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2586414,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2615317,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2555970,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2487801,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2522946,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2509623,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2602307,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2538123,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2496932,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2566276,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2602676,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2544014,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2739726,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Delete definition using wrong taxonomy.",
        "description": "",
        "id": "test-all-scenarios-of-delete-definition.;delete-definition-using-wrong-taxonomy.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 44463890,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.DeleteDefinitionTest.createDef(DeleteDefinitionTest.java:38)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.DeleteDefinitionTest.getInputData(DeleteDefinitionTest.java:56)\n\tat âœ½.When Taxonomy id is wrongId and objectType ID is Game(com/ilimi/taxonomy/controller/taxonomy/cucumber/DeleteDefinitionTest.feature:8)\n",
              "status": "failed"
            },
            "line": 8,
            "name": "Taxonomy id is wrongId and objectType ID is Game",
            "match": {
              "arguments": [
                {
                  "val": "wrongId",
                  "offset": 15
                },
                {
                  "val": "Game",
                  "offset": 44
                }
              ],
              "location": "DeleteDefinitionTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "Unable to delete the definition and get status 404",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 47
                }
              ],
              "location": "DeleteDefinitionTest.wrongObjectType(int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of delete definition.",
    "description": "",
    "id": "test-all-scenarios-of-delete-definition.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/taxonomy/cucumber/DeleteDefinitionTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2816314,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2660588,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3720672,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2593764,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2498826,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2560385,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2708284,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2713381,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2638378,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2741015,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2671941,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2619894,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2765402,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2669982,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2729281,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2623635,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2703474,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2630645,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2691594,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2697925,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2661466,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3028063,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2746126,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2584407,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2609287,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2605772,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2570981,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2679091,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2633421,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get all definition using taxonomy .",
        "description": "",
        "id": "test-all-scenarios-of-get-all-definition.;get-all-definition-using-taxonomy-.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 155519,
              "status": "passed"
            },
            "line": 4,
            "name": "taxonomy ID is numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 15
                }
              ],
              "location": "GetAllDefinitionTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12608835,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.GetAllDefinitionTest.getDefination(GetAllDefinitionTest.java:48)\n\tat âœ½.Then I should get all definition and status is successful(com/ilimi/taxonomy/controller/taxonomy/cucumber/GetAllDefinitionTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "I should get all definition and status is successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 42
                }
              ],
              "location": "GetAllDefinitionTest.getDefination(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2639053,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3205980,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2449684,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2671256,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2639610,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2536465,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2440421,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2671305,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2507694,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2432525,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2426668,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2430025,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2563591,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2676047,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2587201,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2481910,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2443168,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2510738,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2614775,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2600754,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2646165,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2661055,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2658294,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2479571,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2445536,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2516693,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2665948,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2639784,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2726501,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Get all definition using wrong taxonomy .",
        "description": "",
        "id": "test-all-scenarios-of-get-all-definition.;get-all-definition-using-wrong-taxonomy-.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 162794,
              "status": "passed"
            },
            "line": 8,
            "name": "taxonomy ID is ilimi",
            "match": {
              "arguments": [
                {
                  "val": "ilimi",
                  "offset": 15
                }
              ],
              "location": "GetAllDefinitionTest.getInputData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7506786,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.GetAllDefinitionTest.wrongTaxonomyId(GetAllDefinitionTest.java:77)\n\tat âœ½.Then I should get Failed to get definition node and status should be 404(com/ilimi/taxonomy/controller/taxonomy/cucumber/GetAllDefinitionTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I should get Failed to get definition node and status should be 404",
            "match": {
              "arguments": [
                {
                  "val": "Failed",
                  "offset": 13
                },
                {
                  "val": "404",
                  "offset": 64
                }
              ],
              "location": "GetAllDefinitionTest.wrongTaxonomyId(String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get all definition.",
    "description": "",
    "id": "test-all-scenarios-of-get-all-definition.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/taxonomy/cucumber/GetAllDefinitionTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2582832,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2467249,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2666219,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2531622,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2512428,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2467286,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2587913,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 7624301,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2640898,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2556430,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 12754236,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2752089,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3135223,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2680218,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2565881,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2593835,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2566544,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2663406,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2682737,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2558984,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2628144,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2517662,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2523285,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2547084,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2712710,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2571581,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2484712,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2556234,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2583672,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get all taxonomy.",
        "description": "",
        "id": "test-all-scenarios-of-get-all-taxonomy.;get-all-taxonomy.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15929788,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.GetAllTaxonomyTest.getAllTaxonomy(GetAllTaxonomyTest.java:42)\n\tat âœ½.Then I should get all taxonomy for graphId numeracy and literacy and status is successful(com/ilimi/taxonomy/controller/taxonomy/cucumber/GetAllTaxonomyTest.feature:4)\n",
              "status": "failed"
            },
            "line": 4,
            "name": "I should get all taxonomy for graphId numeracy and literacy and status is successful",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 38
                },
                {
                  "val": "literacy",
                  "offset": 51
                },
                {
                  "val": "successful",
                  "offset": 74
                }
              ],
              "location": "GetAllTaxonomyTest.getAllTaxonomy(String,String,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get all Taxonomy.",
    "description": "",
    "id": "test-all-scenarios-of-get-all-taxonomy.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/taxonomy/cucumber/GetAllTaxonomyTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3002576,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2486663,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2752869,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2819430,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2687479,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2512033,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2508945,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2513642,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2429682,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2452965,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2463753,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5904305,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3361360,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2692565,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2735666,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2684368,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 4364233,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2541370,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2526291,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2640153,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5785184,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3266732,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2548772,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2505336,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2416935,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2421232,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2486656,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2630185,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2515477,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get definition using taxonomy and objectType.",
        "description": "",
        "id": "test-all-scenarios-of-get-definition.;get-definition-using-taxonomy-and-objecttype.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 166308,
              "status": "passed"
            },
            "line": 4,
            "name": "taxonomy Id is numeracy and objectType is Game",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 15
                },
                {
                  "val": "Game",
                  "offset": 42
                }
              ],
              "location": "GetDefinitionTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 408597534,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.GetDefinitionTest.getDefination(GetDefinitionTest.java:52)\n\tat âœ½.Then I should get the numeracy and status is successful(com/ilimi/taxonomy/controller/taxonomy/cucumber/GetDefinitionTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "I should get the numeracy and status is successful",
            "match": {
              "arguments": [
                {
                  "val": "successful",
                  "offset": 40
                }
              ],
              "location": "GetDefinitionTest.getDefination(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2784014,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2590441,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2551687,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2544926,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2617115,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2681991,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2626393,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2721698,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2768034,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2778498,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2618787,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2601967,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2637633,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2721314,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2671606,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2622049,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2618030,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2817565,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2788056,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2692038,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2830813,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2667594,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2619122,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2661134,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2701218,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2707200,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2738039,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2531376,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2689371,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Get definition using objectType and wrong taxonomy.",
        "description": "",
        "id": "test-all-scenarios-of-get-definition.;get-definition-using-objecttype-and-wrong-taxonomy.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 177718,
              "status": "passed"
            },
            "line": 8,
            "name": "taxonomy Id is Num and objectType is Game",
            "match": {
              "arguments": [
                {
                  "val": "Num",
                  "offset": 15
                },
                {
                  "val": "Game",
                  "offset": 37
                }
              ],
              "location": "GetDefinitionTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3809348,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.GetDefinitionTest.getDefinationWithWrongTaxonomy(GetDefinitionTest.java:79)\n\tat âœ½.Then I should get status is 404 and error message Failed to get definition node(com/ilimi/taxonomy/controller/taxonomy/cucumber/GetDefinitionTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I should get status is 404 and error message Failed to get definition node",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 23
                },
                {
                  "val": "error message Failed",
                  "offset": 31
                }
              ],
              "location": "GetDefinitionTest.getDefinationWithWrongTaxonomy(int,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2713954,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2808103,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2672367,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2538477,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2573607,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2543490,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2599387,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2616647,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2609908,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 16409776,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2520863,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2627755,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2907503,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2525793,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2563192,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2911281,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3214606,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3612367,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2537189,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2634928,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2622904,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2570017,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2560253,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2738227,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2808219,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2732566,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2641498,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2563764,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2626053,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 11,
        "name": "Get definition using using taxonomy and wrong objectType.",
        "description": "",
        "id": "test-all-scenarios-of-get-definition.;get-definition-using-using-taxonomy-and-wrong-objecttype.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 177631,
              "status": "passed"
            },
            "line": 12,
            "name": "taxonomy Id is numeracy and objectType is wrongGame",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 15
                },
                {
                  "val": "wrongGame",
                  "offset": 42
                }
              ],
              "location": "GetDefinitionTest.getInputData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4993559,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.GetDefinitionTest.getDefinationWithWrongTaxonomy(GetDefinitionTest.java:79)\n\tat âœ½.Then I should get status is 404 and error message Failed to get definition node(com/ilimi/taxonomy/controller/taxonomy/cucumber/GetDefinitionTest.feature:13)\n",
              "status": "failed"
            },
            "line": 13,
            "name": "I should get status is 404 and error message Failed to get definition node",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 23
                },
                {
                  "val": "error message Failed",
                  "offset": 31
                }
              ],
              "location": "GetDefinitionTest.getDefinationWithWrongTaxonomy(int,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get definition.",
    "description": "",
    "id": "test-all-scenarios-of-get-definition.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/taxonomy/cucumber/GetDefinitionTest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2612850,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2760972,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2648926,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2583281,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2593014,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2671704,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2699689,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2682688,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5386068,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3249243,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2544361,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 13663291,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2725085,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 5267084,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2609585,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2605509,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2595331,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2774461,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2620839,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2640872,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3574509,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2754368,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2583683,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 6881940,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2985286,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2629605,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2451081,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2226801,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2191106,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Get Taxonomy using identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-taxonomy.;get-taxonomy-using-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 128503,
              "status": "passed"
            },
            "line": 4,
            "name": "The taxonomy Id is numeracy",
            "match": {
              "arguments": [
                {
                  "val": "numeracy",
                  "offset": 19
                }
              ],
              "location": "GetTaxonomyTest.getAllTaxonomy(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10634849,
              "error_message": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$10.match(StatusResultMatchers.java:655)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.GetTaxonomyTest.getAllNumeracy(GetTaxonomyTest.java:51)\n\tat âœ½.Then I should get all the numeracy data(com/ilimi/taxonomy/controller/taxonomy/cucumber/GetTaxonomyTest.feature:5)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "I should get all the numeracy data",
            "match": {
              "location": "GetTaxonomyTest.getAllNumeracy()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2876615,
              "status": "passed"
            },
            "match": {
              "location": "GetTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2736607,
              "status": "passed"
            },
            "match": {
              "location": "GetAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2837210,
              "status": "passed"
            },
            "match": {
              "location": "GetQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2566484,
              "status": "passed"
            },
            "match": {
              "location": "CreateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2537374,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2492092,
              "status": "passed"
            },
            "match": {
              "location": "UpdateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2590050,
              "status": "passed"
            },
            "match": {
              "location": "GetAllConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2574282,
              "status": "passed"
            },
            "match": {
              "location": "DeleteDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2616278,
              "status": "passed"
            },
            "match": {
              "location": "UpdateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2724757,
              "status": "passed"
            },
            "match": {
              "location": "CreateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2635237,
              "status": "passed"
            },
            "match": {
              "location": "GetDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2611573,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptObjectTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2823152,
              "status": "passed"
            },
            "match": {
              "location": "GetConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2858391,
              "status": "passed"
            },
            "match": {
              "location": "UpdateGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2655318,
              "status": "passed"
            },
            "match": {
              "location": "DeleteGameRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2632686,
              "status": "passed"
            },
            "match": {
              "location": "CreateDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2520426,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptRelationTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2287836,
              "status": "passed"
            },
            "match": {
              "location": "GetAllDefinitionTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2200622,
              "status": "passed"
            },
            "match": {
              "location": "GetAllGamesTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2305695,
              "status": "passed"
            },
            "match": {
              "location": "CreateQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2495817,
              "status": "passed"
            },
            "match": {
              "location": "GetGameTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2536805,
              "status": "passed"
            },
            "match": {
              "location": "CreateConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2650037,
              "status": "passed"
            },
            "match": {
              "location": "GetAllTaxonomyTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2738084,
              "status": "passed"
            },
            "match": {
              "location": "UpdateAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2628250,
              "status": "passed"
            },
            "match": {
              "location": "DeleteAssessmentItemTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2615483,
              "status": "passed"
            },
            "match": {
              "location": "DeleteQuestionnaireTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2977586,
              "status": "passed"
            },
            "match": {
              "location": "GameServiceTest.setup()"
            }
          },
          {
            "result": {
              "duration": 2562600,
              "status": "passed"
            },
            "match": {
              "location": "DeleteConceptTest.setup()"
            }
          },
          {
            "result": {
              "duration": 3404171,
              "status": "passed"
            },
            "match": {
              "location": "DeliverQuestionnaire.setup()"
            }
          }
        ],
        "line": 7,
        "name": "Get Taxonomy using wrong identifier.",
        "description": "",
        "id": "test-all-scenarios-of-get-taxonomy.;get-taxonomy-using-wrong-identifier.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 150540,
              "status": "passed"
            },
            "line": 8,
            "name": "The taxonomy Id is ilimi",
            "match": {
              "arguments": [
                {
                  "val": "ilimi",
                  "offset": 19
                }
              ],
              "location": "GetTaxonomyTest.getAllTaxonomy(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9098167,
              "error_message": "java.lang.AssertionError: Response status expected:\u003c404\u003e but was:\u003c500\u003e\n\tat org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)\n\tat org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)\n\tat org.springframework.test.web.servlet.result.StatusResultMatchers$2.match(StatusResultMatchers.java:67)\n\tat org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)\n\tat com.ilimi.taxonomy.controller.taxonomy.cucumber.GetTaxonomyTest.wrongTaxonomyId(GetTaxonomyTest.java:69)\n\tat âœ½.Then I should get Error message node not found is blank and status is 404(com/ilimi/taxonomy/controller/taxonomy/cucumber/GetTaxonomyTest.feature:9)\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I should get Error message node not found is blank and status is 404",
            "match": {
              "arguments": [
                {
                  "val": "not",
                  "offset": 32
                },
                {
                  "val": "404",
                  "offset": 65
                }
              ],
              "location": "GetTaxonomyTest.wrongTaxonomyId(String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test all scenarios of get Taxonomy.",
    "description": "",
    "id": "test-all-scenarios-of-get-taxonomy.",
    "keyword": "Feature",
    "uri": "com/ilimi/taxonomy/controller/taxonomy/cucumber/GetTaxonomyTest.feature"
  }
]