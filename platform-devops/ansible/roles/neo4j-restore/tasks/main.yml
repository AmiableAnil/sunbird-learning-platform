- name: Check if neo4j is running
  become: yes
  become_user: learning
  shell: ps -ef | grep "{{ neo4j_home }}"  | grep -v grep | wc -l
  register: neo4j_process
  tags:
       - local
       - s3        

- name: Start the neo4j
  become: yes
  become_user: learning
  shell: "{{ neo4j_home }}/bin/neo4j stop"
  when: "neo4j_process.stdout != '0'"
  tags:
       - local
       - s3               

- name: delete graph.db
  become: yes
  file: path=/home/learning/{{ neo4j_dir }}/neo4j-enterprise-3.0.4/data/databases/graph.db state=absent

- name: Run the command s3
  command: aws s3 cp s3://ekstep-public/dev/{{filename}} /mnt/backup/
  tags:
       - s3     

- name: Runt the command s3
  unarchive: src=/mnt/backup/{{filename}} dest=/mnt/backup/ copy=no group={{user}} owner={{user}} creates=/mnt/backup/{{file}}
  tags:
       - s3     


- name: absent the folder
  file: path=/mnt/backup/neo4j-backup state=absent
  tags:
       - s3     

- name: add the file 
  comamnd: mv /mnt/backup/{{file}} /mnt/backup/neo4j-backup
  tags:
       - s3     

- name: Runt the command local
  command: chdir={{neo4j_home}} bin/neo4j-admin restore --from=/mnt/backup/neo4j-backup --database=graph.db --force
  tags:
       - local
       - s3
        
 