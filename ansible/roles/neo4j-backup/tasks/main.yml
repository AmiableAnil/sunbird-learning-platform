- name: clean up backup dir after upload
  file: path={{learner_user_home}}/backup state=absent

- name: delete learning_graph or language_graph
  #become: yes
  file: path={{learner_user_home}}/{{graph_machine}} state=absent
  
- name: create directory
  #become: yes
  file: path={{learner_user_home}}/{{graph_machine}} state=directory owner={{ learner_user }} group={{ learner_user }} recurse=yes
  
- name: copy template of scripthell script to stop service
  #become: yes
  template: src=backup_script.j2 dest={{learner_user_home}}/backup_script.sh  mode=777 owner={{ learner_user }} group={{ learner_user }}  

- name: run script
  #become: yes
  #become_user: learning
  command: "{{learner_user_home}}/backup_script.sh"

- name: ls backup directory
  #become: yes
  #become_user: "{{ learner_user }}"
  command: ls {{learner_user_home}}/backup/
  register: var1

- name: debugging variable
  debug:
    var: var1.stdout 

- name: upload file to azure storage using azcopy
  include_role:
    name: azure-cloud-storage
    tasks_from: blob-upload.yml
  vars:
    blob_container_name: "{{ neo4j_backup_storage }}"
    blob_file_name: "{{ var1.stdout }}"
    container_public_access: "off"
    local_file_or_folder_path: "/home/learning/backup/{{ var1.stdout }}"
    storage_account_name: "{{ azure_management_storage_account_name }}"
    storage_account_key: "{{ azure_management_storage_account_key }}"
  when: cloud_service_provider == "azure"

- name: clean up backup dir after upload
  file: path={{learner_user_home}}/backup state=absent

  
