swagger: '2.0'
info:
  version: '2.0'
  title: Assessment - Service
  description: Assessment API of learning platform provides the resources to create, manage and search assessment items, items sets.Assessment Item API provides the resources to work with questions in the platform.
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: example.com
basePath: /v1
securityDefinitions: {}
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /assessmentitem/search:
    post:
      description: Search an AssessmentItem
      tags:
      - AssessmentItem
      operationId: Create_assessment_item.search_
      produces:
      - application/json
      parameters:
      - name: Request
        in: body
        required: true
        x-is-map: false
        description: search request object
        schema:
          $ref: '#/definitions/request'
      responses:
        200:
          description: assessmentItem searched Successfully
          schema:
            $ref: '#/definitions/searchResponse'
        400:
          description: Error While searching for an AssessmentItem! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'
        default:
          description: Error While searching for an AssessmentItem! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'
      security: []
  /assessmentitem:
    post:
      description: Creates a Question/AssessmentItem based on the type
      tags:
      - AssessmentItem
      operationId: Create_assessment_item.create_
      produces:
      - application/json
      parameters:
      - name: Request
        in: body
        required: true
        x-is-map: false
        description: create request object
        schema:
          $ref: '#/definitions/CreateAssessmentRequest'
      responses:
        200:
          description: AssessmentItem Created Successfully
          schema:
            $ref: '#/definitions/CreateResponse'
        400:
          description: Error While creating assessmentItem! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'
        default:
          description: Error While Creating assessmentItem! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'
      security: []
  /assessmentitem/{assessmentId}:
    get:
      description: Fetch an item from the repository
      tags:
      - AssessmentItem
      operationId: Get_assessment_Item.find_
      produces:
      - application/json
      parameters:
      - name: assessmentId
        in: path
        required: true
        x-is-map: false
        type: string
        description: assessmentId
      responses:
        200:
          description: AssessmentItem fetched Successfully
          schema:
            $ref: '#/definitions/getResponse'
        400:
          description: Error While fetching the assessmentItem! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'.
        default:
          description: Error While fetching the assessmentItem! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'.
      security: []
    delete:
      description: Deletes the particular Question or AssessmentItem
      tags:
      - AssessmentItem
      operationId: Delete_assessment_item.delete_
      produces:
      - application/json
      parameters:
      - name: assessmentId
        in: path
        required: true
        x-is-map: false
        type: string
      responses:
        200:
          description: assessmentItem deleted Successfully
          schema:
            $ref: '#/definitions/DeleteResponse'
        400:
          description: Error While deleting the assessmentItem! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'.
        default:
          description: Error While deleting the assessmentItem! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'.
      security: []
    patch:
      description: Updates the given assessmentItem
      tags:
      - AssessmentItem
      operationId: Update_assessment_item.patch_
      produces:
      - application/json
      parameters:
      - name: assessmentId
        in: path
        required: true
        x-is-map: false
        type: string
      - name: Request
        in: body
        required: true
        x-is-map: false
        description: update request object
        schema:
          $ref: '#/definitions/CreateAssessmentRequest'
      responses:
        200:
          description: AssessmentItem Updated Successfully
          schema:
            $ref: '#/definitions/UpdateResponse'
        400:
          description: Error While Updating the assessmentItem! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'
        default:
          description: Error While Updating the assessmentItem! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'
      security: []
  /graph/domain/count:
    post:
      description: Gives the count of nodes of given ObjectType in the Respository
      tags:
      - ItemSet
      operationId: Create_nodes.count_
      produces:
      - application/json
      parameters:
      - name: Request
        in: body
        required: true
        x-is-map: false
        description: get count request object
        schema:
          $ref: '#/definitions/Request37'
      responses:
        200:
          description: Gives the Count of nodes of given ObjectType
          schema:
            $ref: '#/definitions/CountResponse'
        400:
          description: Error While returning the count of nodes! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'
        default:
          description: Error While returning the count of nodes! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'
      security: []
  /assessmentitemset:
    post:
      description: Creates a new item set in the item repository
      tags:
      - ItemSet
      operationId: Create_ItemSet.create_
      produces:
      - application/json
      parameters:
      - name: Request
        in: body
        required: true
        x-is-map: false
        description: create request object
        schema:
          $ref: '#/definitions/Request42'
      responses:
        200:
          description: Item Created Successfully
          schema:
            $ref: '#/definitions/CreateResponse45'
        400:
          description: Error While creating Item! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'
        default:
          description: Error While creating Item! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'
      security: []
  /assessmentitemset/{ItemSetId}:
    get:
      description: ' Fetch an item set from the repository'
      tags:
      - ItemSet
      operationId: Get_ItemSet.find_
      produces:
      - application/json
      parameters:
      - name: ItemSetId
        in: path
        required: true
        x-is-map: false
        type: string
        description: itemSetId
      responses:
        200:
          description: ItemSet fetched Successfully
          schema:
            $ref: '#/definitions/GetResponse49'
        400:
          description: Error While fetching the ItemSet! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'.
        default:
          description: Error While fetching the ItemSet! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'.
      security: []
    delete:
      description: Deletes an item set from the repository
      tags:
      - ItemSet
      operationId: Delete_ItemSet.delete_
      produces:
      - application/json
      parameters:
      - name: ItemSetId
        in: path
        required: true
        x-is-map: false
        type: string
      responses:
        200:
          description: ItemSet deleted Successfully
          schema:
            $ref: '#/definitions/DeleteResponse'
        400:
          description: Error While deleting the ItemSet! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'.
        default:
          description: Error While deleting the ItemSet! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'.
      security: []
    patch:
      description: Updates an existing item set in the repository
      tags:
      - ItemSet
      operationId: Update_ItemSet.patch_
      produces:
      - application/json
      parameters:
      - name: ItemSetId
        in: path
        required: true
        x-is-map: false
        type: string
      - name: Request
        in: body
        required: true
        x-is-map: false
        description: create request object
        schema:
          $ref: '#/definitions/Request56'
      responses:
        200:
          description: Item set Updated Successfully
          schema:
            $ref: '#/definitions/UpdateResponse58'
        400:
          description: Error While Updating the Item Set! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'
        default:
          description: Error While Updating the Item Set! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'
      security: []
  /assessmentitemset/search:
    post:
      description: Searches an ItemSet
      tags:
      - ItemSet
      operationId: Create_ItemSet.search_
      produces:
      - application/json
      parameters:
      - name: Request
        in: body
        required: true
        x-is-map: false
        description: search request object
        schema:
          $ref: '#/definitions/Request62'
      responses:
        200:
          description: ItemSets reterived Successfully
          schema:
            $ref: '#/definitions/GetResponse64'
        400:
          description: Error While searching for an ItemSet! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'
        default:
          description: Error While searching for an ItemSet! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'
      security: []
  /assessmentitemset/generate/{ItemSetId}:
    get:
      description: ' Geneartes an ItemSet'
      tags:
      - ItemSet
      operationId: Get_ItemSet.generate_
      produces:
      - application/json
      parameters:
      - name: ItemSetId
        in: path
        required: true
        x-is-map: false
        type: string
        description: itemSetId
      responses:
        200:
          description: ItemSet generated Successfully
          schema:
            $ref: '#/definitions/GenerateResponse'
        400:
          description: Error While generating the ItemSet! | Error occurred while operation, mostly because of the input given by client, In general it is 'Client Exception'.
        default:
          description: Error While generating the ItemSet! | Error occurred while operation, mostly because of erroneous condition on server, In general it is 'Server Exception' or 'Exception'.
      security: []
definitions:
  request:
    title: request
    type: object
    properties:
      metadata:
        $ref: '#/definitions/Metadata'
  Metadata:
    title: Metadata
    type: object
    properties:
      filter:
        $ref: '#/definitions/filters'
      sortOrder:
        $ref: '#/definitions/sortOder'
      resultSize:
        description: resultSize
        type: number
        format: double
      startPosition:
        description: startPosition
        type: number
        format: double
  filters:
    title: filters
    type: object
    properties:
      operator:
        type: string
      property:
        type: string
      relations:
        type: string
      value:
        type: string
  sortOder:
    title: sortOder
    type: object
    properties:
      sortFields:
        description: field to be sorted
        type: string
      sortOrder:
        description: sort order
        type: string
  searchResponse:
    title: search Response
    type: object
    properties:
      headers:
        $ref: '#/definitions/ResponseHeader'
      result:
        type: array
        items:
          $ref: '#/definitions/assessmentItem'
  ResponseHeader:
    title: ResponseHeader
    type: object
    properties:
      id:
        description: API Identifier
        type: string
      params:
        $ref: '#/definitions/ResponseParameter'
      responseCode:
        description: API response code
        type: string
      ts:
        description: API execution timespan
        type: string
      ver:
        description: API version information
        type: string
  ResponseParameter:
    title: Response Parameter
    type: object
    properties:
      err:
        description: Error Code
        type: string
      errmsg:
        description: Error Message
        type: string
      msgid:
        description: Message Id
        type: string
      resmsgid:
        description: Response Message Id
        type: string
      status:
        description: Response Status
        type: string
  assessmentItem:
    title: assessmentItem
    type: object
    properties:
      code:
        description: code of assessmentItem
        type: string
      conceptIds:
        type: object
      concepts:
        $ref: '#/definitions/Concepts'
      createdOn:
        description: date of creation
        type: string
      domain:
        description: domain
        type: string
      gradeLevel:
        type: object
      identifier:
        description: assessmentId
        type: string
      keywords:
        type: object
      language:
        type: object
      lastUpdatedOn:
        description: last updated date
        type: string
      maxScore:
        type: object
      name:
        description: name
        type: string
      num_answers:
        description: number of answers
        type: number
        format: double
      options:
        $ref: '#/definitions/Options'
      partial_scoring:
        description: scores
        type: string
      portalOwner:
        description: ownerName
        type: string
      qlevel:
        description: qlevel of assessmentItem
        type: string
      question:
        description: qid
        type: string
      rownum:
        description: rownum
        type: number
        format: double
      subject:
        description: subject of assessmentItem
        type: string
      template:
        description: type of template
        type: string
      template_Id:
        description: template Id
        type: string
      title:
        description: title
        type: string
      type:
        description: assessmentItem type
        type: string
      usedFor:
        description: where the ItemSET is used For
        type: string
      usedIn:
        description: where the assessment is used used
        type: string
  Options:
    title: Options
    type: object
    properties:
      asset:
        type: string
      color:
        type: string
      font:
        type: string
      type:
        type: string
  Concepts:
    title: Concepts
    type: object
    properties:
      description:
        description: description
        type: string
      identifier:
        description: Identifier
        type: string
      index:
        description: index
        type: string
      name:
        description: name
        type: string
      objectType:
        description: objectType
        type: string
      relation:
        description: relationType
        type: string
  CreateAssessmentRequest:
    title: Create Assessment Request
    type: object
    properties:
      identifier:
        description: assessmentId
        type: string
      metadata:
        $ref: '#/definitions/Metadata11'
      objectType:
        description: objectType
        type: string
      outRelations:
        $ref: '#/definitions/OutRelations'
  Metadata11:
    title: Metadata11
    type: object
    properties:
      asset:
        type: string
      code:
        description: code of assessmentItem
        type: string
      color:
        type: string
      conceptIds:
        type: object
      concepts:
        $ref: '#/definitions/Concepts'
      createdOn:
        description: date of creation
        type: string
      domain:
        description: domain
        type: string
      font:
        type: string
      gradeLevel:
        type: object
      identifier:
        description: assessmentId
        type: string
      keywords:
        type: object
      language:
        type: object
      lastUpdatedOn:
        description: last updated date
        type: string
      maxScore:
        type: object
      name:
        description: name
        type: string
      num_answers:
        description: number of answers
        type: number
        format: double
      options:
        $ref: '#/definitions/Options'
      partial_scoring:
        description: scores
        type: string
      portalOwner:
        description: ownerName
        type: string
      qlevel:
        description: qlevel of assessmentItem
        type: string
      question:
        description: qid
        type: string
      rownum:
        description: rownum
        type: number
        format: double
      score:
        description: score
        type: number
        format: double
      subject:
        description: subject of assessmentItem
        type: string
      template:
        description: type of template
        type: string
      template_Id:
        description: template Id
        type: string
      title:
        description: title
        type: string
      type:
        description: assessmentItem type
        type: string
      usedFor:
        description: where the ItemSET is used For
        type: string
      usedIn:
        description: where the assessment is used used
        type: string
      values:
        description: values
        type: object
  OutRelations:
    title: OutRelations
    type: object
    properties:
      endNodeId:
        type: string
      relationType:
        type: string
  CreateResponse:
    title: Create Response
    type: object
    properties:
      headers:
        $ref: '#/definitions/ResponseHeader'
      result:
        $ref: '#/definitions/NodeId'
  NodeId:
    title: Node Id
    type: object
    properties:
      node_id:
        description: Node Identifier
        type: string
  getResponse:
    title: get Response
    type: object
    properties:
      header:
        $ref: '#/definitions/ResponseHeader'
      result:
        $ref: '#/definitions/assessmentItem'
  DeleteResponse:
    title: Delete Response
    type: object
    properties:
      headers:
        $ref: '#/definitions/ResponseHeader'
      result:
        type: object
  UpdateResponse:
    title: Update Response
    type: object
    properties:
      headers:
        $ref: '#/definitions/ResponseHeader'
      result:
        $ref: '#/definitions/NodeId'
  Request37:
    title: Request37
    type: object
    properties:
      metadata:
        description: metadata
        type: object
      nodeType:
        description: nodeType
        type: string
      objectType:
        description: objectType
        type: string
  CountResponse:
    title: Count Response
    type: object
    properties:
      headers:
        $ref: '#/definitions/ResponseHeader'
      result:
        $ref: '#/definitions/Result'
  Result:
    title: Result
    type: object
    properties:
      count:
        description: count
        type: number
  Request42:
    title: Request42
    type: object
    properties:
      identifier:
        description: assessmentId
        type: string
      metadata:
        $ref: '#/definitions/createsItemSet'
      objectType:
        description: objectType
        type: string
  createsItemSet:
    title: creates ItemSet
    type: object
    properties:
      owner:
        description: ownerName
        type: string
      difficulty_level:
        description: defficulty_level
        type: string
      identifier:
        description: assessmentId
        type: string
      code:
        description: code of assessmentItem
        type: string
      subject:
        description: subject of assessmentItem
        type: string
      SET_OBJECT_TYPE_KEY:
        description: set object type
        type: string
      description:
        description: description
        type: string
      language:
        description: languages
        type: object
      type:
        description: assessmentItem type
        type: string
      title:
        description: title
        type: string
      createdOn:
        description: creation date
        type: string
      totalItems:
        description: total number of items
        type: number
        format: double
      gradeLevel:
        description: gradelevel
        type: object
      maxScore:
        description: maxScore
        type: object
      lastUpdatedOn:
        description: last updated date
        type: string
      usedFor:
        description: where the ItemSET is used For
        type: string
      SET_TYPE:
        description: Item Set Type
        type: string
      memberIds:
        type: array
        items:
          $ref: '#/definitions/MemberId'
      endNodeId:
        type: string
      relationType:
        type: string
  MemberId:
    title: MemberId
    type: object
    properties:
      membersIds:
        description: list of memberIds
        type: string
  CreateResponse45:
    title: Create Response45
    type: object
    properties:
      headers:
        $ref: '#/definitions/ResponseHeader'
      result:
        $ref: '#/definitions/SEtId'
  SEtId:
    title: SEt Id
    type: object
    properties:
      set_id:
        description: Set Identifier
        type: string
  GetResponse49:
    title: Get Response49
    type: object
    properties:
      headers:
        $ref: '#/definitions/ResponseHeader'
      result:
        $ref: '#/definitions/Result52'
  Result52:
    title: Result52
    type: object
    properties:
      code:
        description: code of assessmentItem
        type: string
      createdOn:
        description: creation date
        type: string
      description:
        description: description
        type: string
      difficulty_level:
        description: defficulty_level
        type: string
      gradeLevel:
        description: gradelevel
        type: object
      identifier:
        description: assessmentId
        type: string
      language:
        description: languages
        type: object
      lastUpdatedOn:
        description: last updated date
        type: string
      maxScore:
        description: maxScore
        type: object
      owner:
        description: ownerName
        type: string
      SET_OBJECT_TYPE_KEY:
        description: set object type
        type: string
      SET_TYPE:
        description: Item Set Type
        type: string
      subject:
        description: subject of assessmentItem
        type: string
      title:
        description: title
        type: string
      totalItems:
        description: total number of items
        type: number
        format: double
      type:
        description: assessmentItem type
        type: string
      usedFor:
        description: where the ItemSET is used For
        type: string
  Request56:
    title: Request56
    type: object
    properties:
      identifier:
        description: assessmentId
        type: string
      metadata:
        $ref: '#/definitions/Metadata57'
      objectType:
        description: objectType
        type: string
  Metadata57:
    title: Metadata57
    type: object
    properties:
      owner:
        description: ownerName
        type: string
      difficulty_level:
        description: defficulty_level
        type: string
      identifier:
        description: assessmentId
        type: string
      code:
        description: code of assessmentItem
        type: string
      subject:
        description: subject of assessmentItem
        type: string
      SET_OBJECT_TYPE_KEY:
        description: set object type
        type: string
      description:
        description: description
        type: string
      language:
        description: languages
        type: object
      type:
        description: assessmentItem type
        type: string
      title:
        description: title
        type: string
      createdOn:
        description: creation date
        type: string
      totalItems:
        description: total number of items
        type: number
        format: double
      gradeLevel:
        description: gradelevel
        type: object
      maxScore:
        description: maxScore
        type: object
      lastUpdatedOn:
        description: last updated date
        type: string
      usedFor:
        description: where the ItemSET is used For
        type: string
      SET_TYPE:
        description: Item Set Type
        type: string
      membersIds:
        description: list of memberIds
        type: string
      endNodeId:
        type: string
      relationType:
        type: string
  UpdateResponse58:
    title: Update Response58
    type: object
    properties:
      headers:
        $ref: '#/definitions/ResponseHeader'
      result:
        $ref: '#/definitions/SEtId'
  Request62:
    title: Request62
    type: object
    properties:
      metadata:
        type: array
        items:
          $ref: '#/definitions/filters'
  GetResponse64:
    title: Get Response64
    type: object
    properties:
      headers:
        $ref: '#/definitions/ResponseHeader'
      result:
        type: array
        items:
          $ref: '#/definitions/Result52'
  GenerateResponse:
    title: Generate Response
    type: object
    properties:
      headers:
        $ref: '#/definitions/ResponseHeader'
      result:
        $ref: '#/definitions/Result71'
  Result71:
    title: Result71
    type: object
    properties:
      owner:
        description: ownerName
        type: string
      difficulty_level:
        description: defficulty_level
        type: string
      identifier:
        description: assessmentId
        type: string
      code:
        description: code of assessmentItem
        type: string
      subject:
        description: subject of assessmentItem
        type: string
      SET_OBJECT_TYPE_KEY:
        description: set object type
        type: string
      description:
        description: description
        type: string
      language:
        description: languages
        type: object
      type:
        description: assessmentItem type
        type: string
      title:
        description: title
        type: string
      createdOn:
        description: creation date
        type: string
      totalItems:
        description: total number of items
        type: number
        format: double
      gradeLevel:
        description: gradelevel
        type: object
      maxScore:
        description: maxScore
        type: object
      lastUpdatedOn:
        description: last updated date
        type: string
      usedFor:
        description: where the ItemSET is used For
        type: string
      SET_TYPE:
        description: Item Set Type
        type: string
      item_sets:
        type: array
        items:
          $ref: '#/definitions/ItemSet'
      items:
        description: items
        type: object
  ItemSet:
    title: ItemSet
    type: object
    properties:
      count:
        description: count
        type: number
        format: double
      id:
        description: id
        type: string